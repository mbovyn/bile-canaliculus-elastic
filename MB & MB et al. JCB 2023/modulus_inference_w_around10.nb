(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    609017,      11687]
NotebookOptionsPosition[    604022,      11592]
NotebookOutlinePosition[    604462,      11609]
CellTagsIndexPosition[    604419,      11606]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Read in and interpolate data from simulations", "Chapter",
 CellChangeTimes->{{3.86523433449404*^9, 3.865234340209111*^9}, {
  3.865234480365264*^9, 
  3.865234493040868*^9}},ExpressionUUID->"eaa98f9b-007e-4e48-bffb-\
632e87c9e0e6"],

Cell[CellGroupData[{

Cell["Read in", "Section",
 CellChangeTimes->{{3.865234498919613*^9, 3.865234500368148*^9}, {
  3.865235258644967*^9, 
  3.865235259801119*^9}},ExpressionUUID->"68e34b4a-1cea-4a52-b752-\
66fd085968d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8639592958385973`*^9, 3.863959342595092*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"1561e180-a455-4619-b708-64db3618280d"],

Cell[BoxData["\<\"/Users/bovyn/ownCloud/Projects/Bile Canaliculi \
mechanics/surface_evolver/main_text_fig\"\>"], "Output",
 CellChangeTimes->{3.865234753211741*^9, 3.865234820655137*^9, 
  3.865234871212266*^9, 3.865234942399766*^9, 3.8652349946721783`*^9, 
  3.865235046582244*^9, 3.865245467322093*^9, 3.865493476133692*^9, 
  3.865582836817882*^9, 3.865664195906563*^9, 3.8662713885838833`*^9, 
  3.8662715759033613`*^9, 3.866271704608016*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"90a220f4-948d-4e54-9fe2-1bf2cdd0b17f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawimport", "=", 
   RowBox[{
   "Import", "[", "\"\<max_expansion_w_cut_depth/expansions.csv\>\"", "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8639592767069263`*^9, 3.863959278419262*^9}, {
  3.8639593503751907`*^9, 3.8639594029236383`*^9}, {3.863959446774074*^9, 
  3.863959449644706*^9}, {3.8652348672954617`*^9, 3.865234874679459*^9}, {
  3.866271520202753*^9, 3.866271520284091*^9}, {3.866271561933923*^9, 
  3.866271562092593*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"a1fae4fd-fc0d-4c35-b0b2-98045e4ca38c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawimport10", "=", 
   RowBox[{
   "Import", "[", "\"\<max_expansion_w_cut_depth/around10/expansions.csv\>\"",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865493400429701*^9, 3.865493404292848*^9}, {
  3.865493466797435*^9, 3.865493472391576*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"edf121bb-bbe9-4344-a01b-bd02e5eb1950"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datao", "=", 
  RowBox[{"Dataset", "@", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<d\>\"", "->", "#1"}], ",", 
        RowBox[{
         RowBox[{"rawimport", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "->", "#2"}], ",", 
        RowBox[{
         RowBox[{"rawimport", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}], "->", "#3"}]}], "|>"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rawimport", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"rawimport", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"rawimport", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "3"}], "]"}], "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.863960570542458*^9, 3.863960614142161*^9}, {
   3.863960651784987*^9, 3.8639606534311934`*^9}, {3.86396077115094*^9, 
   3.86396077760743*^9}, {3.8639609456022778`*^9, 3.863960946738509*^9}, 
   3.865493683422612*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"375081ef-cfa1-475c-bb1f-5223db1ca948"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.003285642989791, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.0380457909199816`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.0887686072759417`, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.1628584212741768`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.2212826229131475`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.2691527807146366`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3133191152097772`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.331259186608892, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3274813538966557`, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3305420279148752`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.0026866757548552`, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.0344167969799964`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.0792945353063936`, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.1418323338003318`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.1820592405831385`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2142426972288591`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.237515884837215, 
        "modulus" -> 10.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2277132827734731`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2186115030103675`, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2075857760218767`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.001866744022619, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.0272790542061252`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.061301526113696, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1034334492029383`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1296912677816027`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1396029410287019`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1483677858646164`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.134417791380786, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1172311572226061`, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.0979427465102365`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0009404371943789`, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0157704720436695`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0351153486897342`, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.056370624425281, 
        "modulus" -> 1.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0673818871150402`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0728630980636353`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0744300252043604`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0466628342736763`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.035829122193927, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0289969720670218`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0001077194834607`, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0045163828999326`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.009335082895547, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0143061381828296`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0165291771628895`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0170231631371955`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0171919001682825`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0141686662029277`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.01070725384161, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0081475565807179`, 
        "modulus" -> 100.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "d"} -> 
        1, {All, "expansion_ratio"} -> 1, {All, "modulus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "d" -> TypeSystem`PackageScope`AtomShape[60], "expansion_ratio" -> 
            TypeSystem`PackageScope`AtomShape[60], "modulus" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"d", "expansion_ratio", "modulus"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 50], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "d"} -> 
        1, {All, "expansion_ratio"} -> 1, {All, "modulus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "d" -> TypeSystem`PackageScope`AtomShape[60], "expansion_ratio" -> 
            TypeSystem`PackageScope`AtomShape[60], "modulus" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"d", "expansion_ratio", "modulus"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 50], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 50, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "d"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "d"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["expansion_ratio", 
                  Style[
                  "expansion_ratio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "expansion_ratio"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "expansion_ratio"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["modulus", 
                  Style[
                  "modulus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "modulus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "modulus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.03805"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08877"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.16286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22128"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.26915"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.31332"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32748"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33054"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00269"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.03442"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.07929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.14183"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.18206"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.21424"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23752"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22771"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.21861"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.20759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 50, 1], {1, 50 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 50, 1], {1, 50 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[50, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[50, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 50, 1], {1, 50 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 50, 1], {1, 50 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{259., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{259., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86523475354071*^9, 3.865234820742618*^9, 
  3.865234871361641*^9, 3.865234942460731*^9, 3.8652349947301493`*^9, 
  3.865235046637204*^9, 3.865245467900708*^9, 3.865493489052701*^9, 
  3.865493684839405*^9, 3.86558283720323*^9, 3.865664195969738*^9, 
  3.86627138899002*^9, 3.866271575966138*^9, 3.86627170469566*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"2b2618bf-82ab-4756-ab76-fb00dda63161"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data10", "=", 
  RowBox[{"Dataset", "@", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<d\>\"", "->", "#1"}], ",", 
        RowBox[{
         RowBox[{"rawimport10", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "->", "#2"}], ",", 
        RowBox[{
         RowBox[{"rawimport10", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}], "->", "#3"}]}], "|>"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rawimport10", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"rawimport10", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"rawimport10", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], ",", "3"}], "]"}], "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.865493493566146*^9, 3.8654935139781857`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"f49c11e6-dd6a-4661-9744-7ade13d3f9cb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3133191152097772`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3165478276252967`, 
        "modulus" -> 12.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.327193347908715, 
        "modulus" -> 15.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3281740504797106`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.331259186608892, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3258615565192415`, 
        "modulus" -> 25.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.330494031334664, 
        "modulus" -> 30.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3280294724686326`, 
        "modulus" -> 35.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3282722539974898`, 
        "modulus" -> 40.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3274813538966557`, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2142426972288591`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2214999965296829`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2263002545794082`, 
        "modulus" -> 7.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2300963985478182`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2336956260653864`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.237515884837215, 
        "modulus" -> 10.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2330333343584994`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2308469368181068`, 
        "modulus" -> 15.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2319359945057635`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2277132827734731`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1396029410287019`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1420941160861269`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1436376010207154`, 
        "modulus" -> 7.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1453759574003108`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1474747379264936`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1483677858646164`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1491540499755462`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.146379645199064, 
        "modulus" -> 15.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1374626907120455`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.134417791380786, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0728630980636353`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0732926989840614`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.074095878082254, 
        "modulus" -> 7.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0735758945451865`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0712135524585498`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0744300252043604`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0664492605006515`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0571838481930091`, 
        "modulus" -> 15.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0550046763550098`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0466628342736763`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0170231631371955`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0173811883092876`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.016615630792919, 
        "modulus" -> 7.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0163519469219264`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0160070855169814`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0171919001682825`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0166636935847233`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0162579094649837`, 
        "modulus" -> 15.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0168429493156712`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0141686662029277`, 
        "modulus" -> 21.5|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "d"} -> 
        1, {All, "expansion_ratio"} -> 1, {All, "modulus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "d" -> TypeSystem`PackageScope`AtomShape[60], "expansion_ratio" -> 
            TypeSystem`PackageScope`AtomShape[60], "modulus" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"d", "expansion_ratio", "modulus"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 50], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "d"} -> 
        1, {All, "expansion_ratio"} -> 1, {All, "modulus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "d" -> TypeSystem`PackageScope`AtomShape[60], "expansion_ratio" -> 
            TypeSystem`PackageScope`AtomShape[60], "modulus" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"d", "expansion_ratio", "modulus"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 50], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 50, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "d"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "d"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["expansion_ratio", 
                  Style[
                  "expansion_ratio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "expansion_ratio"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "expansion_ratio"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["modulus", 
                  Style[
                  "modulus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "modulus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "modulus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.31332"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.31655"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32719"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32817"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32586"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33049"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32803"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32827"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32748"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.21424"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2215"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2263"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2301"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2337"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23752"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23085"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22771"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 50, 1], {1, 50 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 50, 1], {1, 50 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[50, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[50, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 50, 1], {1, 50 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 50, 1], {1, 50 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{259., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{259., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865493515236676*^9, 3.865582837328247*^9, 
  3.865664195993372*^9, 3.866271389014715*^9, 3.866271576090534*^9, 
  3.866271704821303*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"f89e1ff0-2a7f-436d-b6b4-944fa930cb0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"datao", ",", 
    RowBox[{"data10", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#modulus", "!=", "10"}], "&&", 
        RowBox[{"#modulus", "!=", "21.5"}], "&&", 
        RowBox[{"#modulus", "!=", "46.4"}], "&&", 
        RowBox[{"#modulus", "!=", "4.64"}]}], "&"}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865493631561324*^9, 3.865493640045371*^9}, {
   3.865493688854229*^9, 3.865493689976124*^9}, 3.865494042248872*^9, {
   3.865494613155846*^9, 3.865494664230633*^9}, {3.8654947522722588`*^9, 
   3.8654947726068563`*^9}, {3.865494965857862*^9, 3.865494970161811*^9}, {
   3.865495122137154*^9, 3.865495127405951*^9}, {3.865581485182358*^9, 
   3.8655814915918703`*^9}, {3.8655817269331427`*^9, 3.865581732609605*^9}, {
   3.865582721706283*^9, 3.8655827252106237`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"2812a104-e95f-46ed-9b2f-d865d7f89c60"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.003285642989791, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.0380457909199816`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.0887686072759417`, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.1628584212741768`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.2212826229131475`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.2691527807146366`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3133191152097772`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.331259186608892, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3274813538966557`, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3305420279148752`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.0026866757548552`, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.0344167969799964`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.0792945353063936`, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.1418323338003318`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.1820592405831385`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2142426972288591`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.237515884837215, 
        "modulus" -> 10.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2277132827734731`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2186115030103675`, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2075857760218767`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.001866744022619, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.0272790542061252`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.061301526113696, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1034334492029383`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1296912677816027`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1396029410287019`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1483677858646164`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.134417791380786, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1172311572226061`, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.0979427465102365`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0009404371943789`, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0157704720436695`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0351153486897342`, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.056370624425281, 
        "modulus" -> 1.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0673818871150402`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0728630980636353`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0744300252043604`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0466628342736763`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.035829122193927, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0289969720670218`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0001077194834607`, 
        "modulus" -> 0.01|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0045163828999326`, 
        "modulus" -> 0.1|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.009335082895547, 
        "modulus" -> 0.316|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0143061381828296`, 
        "modulus" -> 1.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0165291771628895`, 
        "modulus" -> 2.15|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0170231631371955`, 
        "modulus" -> 4.64|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0171919001682825`, 
        "modulus" -> 10.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0141686662029277`, 
        "modulus" -> 21.5|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.01070725384161, 
        "modulus" -> 46.4|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0081475565807179`, 
        "modulus" -> 100.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3165478276252967`, 
        "modulus" -> 12.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.327193347908715, 
        "modulus" -> 15.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3281740504797106`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3258615565192415`, 
        "modulus" -> 25.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.330494031334664, 
        "modulus" -> 30.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3280294724686326`, 
        "modulus" -> 35.|>, <|
       "d" -> 0.3277777777777778, "expansion_ratio" -> 1.3282722539974898`, 
        "modulus" -> 40.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2214999965296829`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2263002545794082`, 
        "modulus" -> 7.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2300963985478182`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2336956260653864`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2330333343584994`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2308469368181068`, 
        "modulus" -> 15.|>, <|
       "d" -> 0.26319444444444445`, "expansion_ratio" -> 1.2319359945057635`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1420941160861269`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1436376010207154`, 
        "modulus" -> 7.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1453759574003108`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1474747379264936`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1491540499755462`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.146379645199064, 
        "modulus" -> 15.|>, <|
       "d" -> 0.1986111111111111, "expansion_ratio" -> 1.1374626907120455`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0732926989840614`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.074095878082254, 
        "modulus" -> 7.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0735758945451865`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0712135524585498`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0664492605006515`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0571838481930091`, 
        "modulus" -> 15.|>, <|
       "d" -> 0.13402777777777777`, "expansion_ratio" -> 1.0550046763550098`, 
        "modulus" -> 18.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0173811883092876`, 
        "modulus" -> 6.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.016615630792919, 
        "modulus" -> 7.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0163519469219264`, 
        "modulus" -> 8.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0160070855169814`, 
        "modulus" -> 9.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0166636935847233`, 
        "modulus" -> 12.5|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0162579094649837`, 
        "modulus" -> 15.|>, <|
       "d" -> 0.06944444444444445, "expansion_ratio" -> 1.0168429493156712`, 
        "modulus" -> 18.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "d"} -> 
        1, {All, "expansion_ratio"} -> 1, {All, "modulus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "d" -> TypeSystem`PackageScope`AtomShape[60], "expansion_ratio" -> 
            TypeSystem`PackageScope`AtomShape[60], "modulus" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"d", "expansion_ratio", "modulus"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 85], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "d"} -> 
        1, {All, "expansion_ratio"} -> 1, {All, "modulus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "d" -> TypeSystem`PackageScope`AtomShape[60], "expansion_ratio" -> 
            TypeSystem`PackageScope`AtomShape[60], "modulus" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"d", "expansion_ratio", "modulus"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 85], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 85, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["d", 
                  Style[
                  "d", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "d"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "d"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["expansion_ratio", 
                  Style[
                  "expansion_ratio", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "expansion_ratio"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "expansion_ratio"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["modulus", 
                  Style[
                  "modulus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "modulus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "modulus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.03805"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08877"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.16286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22128"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.26915"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.31332"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32748"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.327778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33054"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00269"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.03442"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.07929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.14183"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.18206"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.21424"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23752"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.22771"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.21861"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.263194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["d"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.20759"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["expansion_ratio"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["modulus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 85, 1], {1, 85 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 85, 1], {1, 85 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[85, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[85, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 85, 1], {1, 85 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 85, 1], {1, 85 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{259., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{259., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8654936406598063`*^9, 3.865493690301096*^9, 3.865494043098518*^9, {
   3.8654946598140173`*^9, 3.865494665498474*^9}, 3.8654947743978148`*^9, 
   3.865494910253828*^9, 3.865494970779039*^9, 3.865495128414853*^9, 
   3.865581493849098*^9, 3.865581735343277*^9, 3.865582837460208*^9, 
   3.865664196016778*^9, 3.866271389041601*^9, 3.866271576220357*^9, 
   3.866271704947215*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"f24e1a5b-4145-4058-ac0e-26fae1afbb51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"data", "[", 
     RowBox[{"All", ",", "\"\<d\>\""}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.863960963399345*^9, 3.863961001043462*^9}, {
  3.863961041335597*^9, 3.863961042353512*^9}, {3.8639610943453817`*^9, 
  3.863961098343713*^9}, {3.863961139853237*^9, 3.863961142836009*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"bad23199-8d7c-4b13-aa51-37b8ecafbb17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3277777777777778`", ",", "0.26319444444444445`", ",", 
   "0.1986111111111111`", ",", "0.13402777777777777`", ",", 
   "0.06944444444444445`"}], "}"}]], "Output",
 CellChangeTimes->{{3.86523493669451*^9, 3.865234942564827*^9}, 
   3.865234994835556*^9, 3.8652350467451887`*^9, 3.865245468004599*^9, 
   3.8654936932591667`*^9, 3.8654951462971487`*^9, 3.865581502124599*^9, 
   3.865582085464587*^9, 3.8655828375664873`*^9, 3.865664196019828*^9, 
   3.8662713890452538`*^9, 3.866271576322485*^9, 3.866271705064713*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"ce343599-8d10-41d4-8c91-ac6eb4872de5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find maximum c for each depth", "Section",
 CellChangeTimes->{{3.865582847011815*^9, 
  3.865582861035789*^9}},ExpressionUUID->"9ed08d2c-df1d-4fc0-b545-\
e5011c0620b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findcmaxs", "[", "j_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ddata", ",", "dinterppoints", ",", "dinterp", ",", "dsp", ",", 
      "dmaxc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ddata", "=", 
      RowBox[{"data", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#d", "==", 
          RowBox[{"ds", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "&"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dinterppoints", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"ddata", "[", 
             RowBox[{"i", ",", "\"\<modulus\>\""}], "]"}], "]"}], ",", 
           RowBox[{"ddata", "[", 
            RowBox[{"i", ",", "\"\<expansion_ratio\>\""}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "ddata", "]"}]}], "}"}]}], "]"}], "//", 
       "Sort"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dinterp", "=", 
      RowBox[{"Interpolation", "[", "dinterppoints", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dsp", "=", 
      RowBox[{"BSplineFunction", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dinterp", "[", "c", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           RowBox[{"Log", "[", ".01", "]"}], ",", 
           RowBox[{"Log", "[", "100", "]"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "100", "]"}], "-", 
              RowBox[{"Log", "[", ".01", "]"}]}], ")"}], "/", "50"}]}], 
          "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dmaxc", "=", 
      RowBox[{"FindMaximum", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dsp", "[", "c", "]"}], ",", 
          RowBox[{"0", "<", "c", "<", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", ".9"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"c", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", "100", "]"}], "-", 
             RowBox[{"Log", "[", ".01", "]"}]}], ")"}]}], "+", 
          RowBox[{"Log", "[", ".01", "]"}]}], "]"}], "/.", 
        RowBox[{"dmaxc", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"LogLinearPlot", "[", 
          RowBox[{
           RowBox[{"dsp", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", "c", "]"}], "-", 
               RowBox[{"Log", "[", ".01", "]"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Log", "[", "100", "]"}], "-", 
               RowBox[{"Log", "[", ".01", "]"}]}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", ".01", ",", "100"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ddata", "[", 
               RowBox[{"i", ",", "\"\<modulus\>\""}], "]"}], ",", 
              RowBox[{"ddata", "[", 
               RowBox[{"i", ",", "\"\<expansion_ratio\>\""}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "ddata", "]"}]}], "}"}]}], "]"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exp", "[", "c", "]"}], ",", 
               RowBox[{"dinterp", "[", "c", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", 
               RowBox[{"Log", "[", ".01", "]"}], ",", 
               RowBox[{"Log", "[", "100", "]"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Log", "[", "100", "]"}], "-", 
                  RowBox[{"Log", "[", ".01", "]"}]}], ")"}], "/", "50"}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"dsp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "c", "]"}], "-", 
           RowBox[{"Log", "[", ".01", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "100", "]"}], "-", 
           RowBox[{"Log", "[", ".01", "]"}]}], ")"}]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8655806896269093`*^9, 3.8655809373824263`*^9}, {
  3.865581011103059*^9, 3.865581020324953*^9}, {3.8655810917913647`*^9, 
  3.865581113919118*^9}, {3.8655811705791283`*^9, 3.8655811784927273`*^9}, {
  3.8655812159699287`*^9, 3.865581251884201*^9}, {3.865581373066641*^9, 
  3.865581373129899*^9}, {3.865581409153268*^9, 3.865581417207559*^9}, {
  3.8656636453231983`*^9, 3.865663645463572*^9}, {3.865663701906*^9, 
  3.8656637552768908`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"6b6dafb0-efe9-489f-b25c-f25567cf2c32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findcmaxs", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.86558102485664*^9, 3.8655810276497602`*^9}, {
   3.865581070930094*^9, 3.8655810735022783`*^9}, {3.865581127273656*^9, 
   3.865581142249813*^9}, {3.865581276568762*^9, 3.865581298807246*^9}, {
   3.865581382210103*^9, 3.865581393060628*^9}, {3.865581423102062*^9, 
   3.8655814543128*^9}, {3.865581521777958*^9, 3.865581521844256*^9}, {
   3.865581627275872*^9, 3.86558164889662*^9}, {3.8655817638055887`*^9, 
   3.865581785271529*^9}, {3.865582115267702*^9, 3.8655821373472757`*^9}, {
   3.8656638301753473`*^9, 3.8656638357978067`*^9}, 3.8656638902023287`*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"c6f9276f-f08d-4db8-9d28-35556797919e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.362977221401469`", ",", 
   GraphicsBox[{{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
HuRBx2P/ikpywVb///8RMc1Gy8EV/D+izW2h
          "]]},
        Annotation[#, "Charting`Private`Tag$364391#1"]& ]}, {}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{-4.605170185988091, 
        1.0001077194834607`}, {-2.3025850929940455`, 
        1.0045163828999326`}, {-1.152013065395225, 1.009335082895547}, {0., 
        1.0143061381828296`}, {0.7654678421395714, 1.0165291771628895`}, {
        1.534714366238164, 1.0170231631371955`}, {2.302585092994046, 
        1.0171919001682825`}, {3.068052935133617, 1.0141686662029277`}, {
        3.8372994592322094`, 1.01070725384161}, {4.605170185988092, 
        1.0081475565807179`}, {1.791759469228055, 1.0173811883092876`}, {
        1.9459101490553132`, 1.016615630792919}, {2.0794415416798357`, 
        1.0163519469219264`}, {2.1972245773362196`, 1.0160070855169814`}, {
        2.5257286443082556`, 1.0166636935847233`}, {2.70805020110221, 
        1.0162579094649837`}, {2.8903717578961645`, 
        1.0168429493156712`}}]}, {{}, {}}}, {{}, 
      {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1U21IU1EYvmrOTGabc7tzzrFpfqQhSpqwZO+xZQlGmWAlpoY4P1qRUhhC
SmLohMD8+uHHjyQTlb514UdxD2Ea0VA0jTRTf5ggGmdTEMSw4z144XJ5OO/7
Ps95n+ca8u6kW9w5jjtJ3/2vMsM+8tbqh7vrhjdLOAL+gzqJ/LUc33LtxIRR
rAi0pZW4ZPjDdMK4kWK/SmfbRLwMK0Yd9b0Uh3yyf812+eL1zID8224EDDZb
rrZcikej7gdVuRPQX8zamtvzwfykuWXRg4DOP7quteYIvrEw31XtSUA7x+mu
Sb1x4Fp7aJEXAc3T6XeqZi889niJ1HoTUBd0n5/RSPB8lmRpwYcAf6L8V1Pn
ITy7Ufwt35eA0pVamh7hgeN+FtbzcqpX1O+GpVcrMr8rDvRy+ONA40qfiuoR
9f0T7iX2V9sDKL+oZ0e4NJsnW9NSPpF/Wyi+GVpk0tN9iHxbwuJSZWFPCJ0n
zncKDsPmWlA47RfnbQhpSslEcyStF/tXhUfPThP3aAIysX5ZqBngo3JiCRwV
z38IpTG66x1xBDgRjwt5e1O5/QkEdvf2n4nEMu9hv1YjARM7B01foz7SRCCW
9YPLXJE4hKheNh9aprIdZWfo/Rg/tF5WG5vMBMKZPrBar7wMh4N6J9j5zhe1
dJ6W3Q8U7clt8qSD/m14FfRlpfcsgWNsP9BhMDosKQQi2P7As2fn8OdkAiq2
X6QcKbLlUD4V2z8aKjmq8aB61MwfFGgyW8bOUX+ZfyjHUZDaQOu1zF+UlLxt
fU+xjvmPKmKe/x6kWM/ygdbrjG8sdF/BLD+oK66h10T9CGb5QtXxM65KnkAY
yx+qUj/484T6G8byiZat2pXJKJoXll+UZXz49+4+ZvlGuxf6Naeof0qWf+SU
qlOOU3959n8gy6osI9dA4D8Y73QU
        "]]}, {{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-4.605169998021961, 1.000052177784719},
    CoordinatesToolOptions:>{"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Part[#, 2]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Part[#, 2]}& )},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {
       Charting`ScaledTicks[
       "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
        RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None},
    
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->FrontEndValueCache[{
       Charting`ScaledTicks[
       "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
        RotateLabel -> 0], Automatic}, {{{-4.605170185988091, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {
        0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-6.214608098422191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.809142990314028, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.521460917862246, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.115995809754082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.961845129926823, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.8283137373023015`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.710530701645918, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.703782474656201, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.991464547107982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.214608098422191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.396929655216146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.551080335043404, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.684611727667927, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.802394763324311, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.907755278982137, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
       Automatic}]], ",", 
   RowBox[{
    InterpretationBox[
     RowBox[{
      TagBox["BSplineFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{
                   Thickness[0.05], 
                   AbsoluteDashing[{2, 2}], 
                   CapForm["Butt"], 
                   LineBox[
                    NCache[{{0, 
                    Rational[1, 4]}, {
                    Rational[1, 4], 1}, {1, 
                    Rational[1, 2]}}, {{0, 0.25}, {0.25, 1}, {1, 0.5}}]]}, {
                   PointSize[0.2], 
                   PointBox[
                    NCache[{{0, 
                    Rational[1, 4]}, {
                    Rational[1, 4], 1}, {1, 
                    Rational[1, 2]}}, {{0, 0.25}, {0.25, 1}, {
                    1, 0.5}}]]}}, {{}, {}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   Opacity[1.], 
                   FaceForm[
                    Opacity[0.3]], 
                   LineBox[CompressedData["
1:eJxVk/1PzAEAh48o6hK90CKqXRGaiK28fUJSyHLWjOtUl5CmcDVRUvNS5Fhx
Kq6twinzcrZwJy+9TBe3W9eL6lLn7vt2LnVneUvrBeMXz/bZ8wd89ngKUrgJ
E1ks1rLf++P/0SB4Oa3IzToDDzvb59ndLWDdWukUrhaj/cRsl1mqNpRX4nRQ
ThnkQ2e51hfewV1iOcQslaKWc+5Iln8nqqcqQjZdu4dK1xrfZaYu7FONDs6L
e4SUZxecR4XdSFmSa7LuqEa7jXSh1r4Hw5M/eZl2yqF+TlyZcqkXB45kj6U+
rcHhkbISDqVDIU9wJTDzFYQuoc0yLz1qItbV1YvqUJuW/gSv9Kjfv6WwMbYB
3IKA1P5IA2pPRXWmJ75GgP2A41rGgLxN6RHCaCWmxRhJfiIBnjy1riL3DcKs
5acumQnwD4lP+zxV4fiwT8n6AyQCfUKySLUacw77BT9oISGIHyNHHDQYcto6
HrCKQizH4tm7qAXK5Amyg2IKfRbv+gf7WpF8g3/Z20whz7lK53izDdsim3M8
V9OYfV3SVa9pR3fz3s+KTBrbv0X7Ds3tAP/m0I1eBY0n7tsHZPxOBA9nhBX3
0ZAec92VJOlC0+Z7M847MuAG2cxaMarFfXlVqesKBkVBG2OsIt5jSXS12j2C
wePHcWpObQ+IDcYfi/cwYFstvdoQoMOd0oflnQkMBo0LXuqufkDryTQPYi+D
RJHXlxSRHvk8tt34bga2TXaqt6EGcO5aJGnhDFxn9ggl4wa8hPWODH8Gsp1b
8m+rCOS12e+pZDO4OF8wEi4ika0kdrFJGgphMlcpoPAoXjNx0n0a27yosgw/
Gi/U0st+R2nYdhSKeD9onKiIR4U/jbwFNdXadwx2v0kOfaGnUDyQaNtcaUSF
i9tdk4iCcrhVNangI26zB00+iyisd1s471a6CTnqpCTnOhIhMqvA7zv6QFY5
RI5FkeiKLMjmbvwE3VuLlKUlIOA1pY769kMjLS7/ySN+/75KGW4/gMx8j5gi
rQFrnBqnJ9iYwYiTJHEbDDB/i2p0+GqG0VIiYT3U428Hn/9Zj18MVo0w
                    
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> 0.2], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{
                   Thickness[0.05], 
                   AbsoluteDashing[{2, 2}], 
                   CapForm["Butt"], 
                   LineBox[
                    NCache[{{0, 
                    Rational[1, 4]}, {
                    Rational[1, 4], 1}, {1, 
                    Rational[1, 2]}}, {{0, 0.25}, {0.25, 1}, {1, 0.5}}]]}, {
                   PointSize[0.2], 
                   PointBox[
                    NCache[{{0, 
                    Rational[1, 4]}, {
                    Rational[1, 4], 1}, {1, 
                    Rational[1, 2]}}, {{0, 0.25}, {0.25, 1}, {
                    1, 0.5}}]]}}, {{}, {}, {
                   GrayLevel[0.55], 
                   AbsoluteThickness[1.5], 
                   Opacity[1.], 
                   FaceForm[
                    Opacity[0.3]], 
                   LineBox[CompressedData["
1:eJxVk/1PzAEAh48o6hK90CKqXRGaiK28fUJSyHLWjOtUl5CmcDVRUvNS5Fhx
Kq6twinzcrZwJy+9TBe3W9eL6lLn7vt2LnVneUvrBeMXz/bZ8wd89ngKUrgJ
E1ks1rLf++P/0SB4Oa3IzToDDzvb59ndLWDdWukUrhaj/cRsl1mqNpRX4nRQ
ThnkQ2e51hfewV1iOcQslaKWc+5Iln8nqqcqQjZdu4dK1xrfZaYu7FONDs6L
e4SUZxecR4XdSFmSa7LuqEa7jXSh1r4Hw5M/eZl2yqF+TlyZcqkXB45kj6U+
rcHhkbISDqVDIU9wJTDzFYQuoc0yLz1qItbV1YvqUJuW/gSv9Kjfv6WwMbYB
3IKA1P5IA2pPRXWmJ75GgP2A41rGgLxN6RHCaCWmxRhJfiIBnjy1riL3DcKs
5acumQnwD4lP+zxV4fiwT8n6AyQCfUKySLUacw77BT9oISGIHyNHHDQYcto6
HrCKQizH4tm7qAXK5Amyg2IKfRbv+gf7WpF8g3/Z20whz7lK53izDdsim3M8
V9OYfV3SVa9pR3fz3s+KTBrbv0X7Ds3tAP/m0I1eBY0n7tsHZPxOBA9nhBX3
0ZAec92VJOlC0+Z7M847MuAG2cxaMarFfXlVqesKBkVBG2OsIt5jSXS12j2C
wePHcWpObQ+IDcYfi/cwYFstvdoQoMOd0oflnQkMBo0LXuqufkDryTQPYi+D
RJHXlxSRHvk8tt34bga2TXaqt6EGcO5aJGnhDFxn9ggl4wa8hPWODH8Gsp1b
8m+rCOS12e+pZDO4OF8wEi4ika0kdrFJGgphMlcpoPAoXjNx0n0a27yosgw/
Gi/U0st+R2nYdhSKeD9onKiIR4U/jbwFNdXadwx2v0kOfaGnUDyQaNtcaUSF
i9tdk4iCcrhVNangI26zB00+iyisd1s471a6CTnqpCTnOhIhMqvA7zv6QFY5
RI5FkeiKLMjmbvwE3VuLlKUlIOA1pY769kMjLS7/ySN+/75KGW4/gMx8j5gi
rQFrnBqnJ9iYwYiTJHEbDDB/i2p0+GqG0VIiYT3U428Hn/9Zj18MVo0w
                    
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRangePadding -> 0.2], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Degree: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Rational: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Weights: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["Automatic", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Knots: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                    "0.020833333333333332`", ",", "0.041666666666666664`", 
                    ",", "0.0625`", ",", "0.08333333333333333`", ",", 
                    "0.10416666666666667`", ",", "\"...\""}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Control points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["51", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     BSplineFunction[1, {{0., 1.}}, {3}, {False}, {CompressedData["
1:eJxTTMoPSmVkYGAwBuJlnbs+FzB8sM/59MtADUjvuWx+3ApICx85278SSL+J
lEzJZfxgf0S7XLaR6YO9+AXnqfeZP9gn3L29pJn1g730q9mqGewf7I/1PPjQ
zvnB/nY024O73B/sr73NPJPC98He5GZ6v7jgB3ve8NrIK8If7PdumfR0ldgH
+xKbzc1bJT/Y+19LEngl88E+M0s1w07hg/39B3XpK5Q/2J9V/PxKVv2DfYAo
2/kpWh/sWxZbf2DS+2DftkVcO87wg32hgVzMHJMP9kn/L8VvNv9gX8a5S2im
1Qd7qVWTFLTsPth/cq612enwwX7qpdizZU4f7GcGSlhNdv5gn50dtlbd/oP9
VvGFa9qB6oRnu84SdPxgv072xNOVLh/s5yhanU31+GDPuuIXx1HXD/aiuzM6
4oD6dhbwSzEDzZG2c0495vbBPu5smvdEoLij6/fsbUC61mDpvR1A+k2n1YZU
oLuWmExcaQf0R7Pp1U914h/sGyVqnk0A+vdhtszTC9of7KOtGt4VA+k/Ppul
zID++8gr4aEJ9G/qc4HQeMUP9gDS1cOe
       "], Automatic}, CompressedData["
1:eJyFyUsKQQEYBeDLTqzC8O5B2YAythpLMGFiYmIkpaQUQgh5XNf7sQSvbyqn
/v7Od1K5QiafDIIg8bp08D/ZT4rh95fCr1b1Wlgpv1PnDb1pb/E27/Au7+l9
+4AP+YiP+YRP+YzP+YIv+Upf2dd8wzd8yyMe8R2Pecz3/MAP/MhP/MTP/MIv
/Mpv/Mbv/PHzPwGu/Zel
      "], {0}, MachinePrecision, "Unevaluated"],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"0.10857362047581294`", " ", 
     RowBox[{"(", 
      RowBox[{"4.605170185988091`", "\[VeryThinSpace]", "+", 
       RowBox[{"Log", "[", "c", "]"}]}], ")"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.865581028798983*^9, {3.865581071236639*^9, 3.8655810737677603`*^9}, {
   3.86558111932374*^9, 3.8655811424682083`*^9}, {3.865581173105913*^9, 
   3.8655811804939337`*^9}, {3.865581265798931*^9, 3.865581299088996*^9}, {
   3.865581375509458*^9, 3.865581454591784*^9}, 3.865581522200945*^9, {
   3.865581627693755*^9, 3.865581649299713*^9}, {3.8655817591605997`*^9, 
   3.865581785588509*^9}, {3.865582113083932*^9, 3.865582137573032*^9}, 
   3.8655828377594433`*^9, {3.8656637450595837`*^9, 3.865663757948106*^9}, {
   3.8656638181801367`*^9, 3.865663836684486*^9}, 3.86566389051414*^9, 
   3.8656641960711718`*^9, 3.866271389290573*^9, 3.86627157643099*^9, 
   3.8662717051775703`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"8a928efa-5656-44f9-8927-c10405f39c63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"findcmaxs", "[", "5", "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865581334182963*^9, 3.865581336696329*^9}, {
  3.8655814380162153`*^9, 3.865581438097246*^9}, {3.865581526879409*^9, 
  3.865581526944285*^9}, {3.865582147712641*^9, 3.865582147769195*^9}, {
  3.86558232039725*^9, 3.865582331657892*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"d766bd9e-f910-4818-b542-5c2bb6005d26"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
HuRBx2P/ikpywVb///8RMc1Gy8EV/D+izW2h
        "]]},
      Annotation[#, "Charting`Private`Tag$364973#1"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{-4.605170185988091, 
      1.0001077194834607`}, {-2.3025850929940455`, 
      1.0045163828999326`}, {-1.152013065395225, 1.009335082895547}, {0., 
      1.0143061381828296`}, {0.7654678421395714, 1.0165291771628895`}, {
      1.534714366238164, 1.0170231631371955`}, {2.302585092994046, 
      1.0171919001682825`}, {3.068052935133617, 1.0141686662029277`}, {
      3.8372994592322094`, 1.01070725384161}, {4.605170185988092, 
      1.0081475565807179`}, {1.791759469228055, 1.0173811883092876`}, {
      1.9459101490553132`, 1.016615630792919}, {2.0794415416798357`, 
      1.0163519469219264`}, {2.1972245773362196`, 1.0160070855169814`}, {
      2.5257286443082556`, 1.0166636935847233`}, {2.70805020110221, 
      1.0162579094649837`}, {2.8903717578961645`, 
      1.0168429493156712`}}]}, {{}, {}}}, {{}, 
    {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJw1U21IU1EYvmrOTGabc7tzzrFpfqQhSpqwZO+xZQlGmWAlpoY4P1qRUhhC
SmLohMD8+uHHjyQTlb514UdxD2Ea0VA0jTRTf5ggGmdTEMSw4z144XJ5OO/7
Ps95n+ca8u6kW9w5jjtJ3/2vMsM+8tbqh7vrhjdLOAL+gzqJ/LUc33LtxIRR
rAi0pZW4ZPjDdMK4kWK/SmfbRLwMK0Yd9b0Uh3yyf812+eL1zID8224EDDZb
rrZcikej7gdVuRPQX8zamtvzwfykuWXRg4DOP7quteYIvrEw31XtSUA7x+mu
Sb1x4Fp7aJEXAc3T6XeqZi889niJ1HoTUBd0n5/RSPB8lmRpwYcAf6L8V1Pn
ITy7Ufwt35eA0pVamh7hgeN+FtbzcqpX1O+GpVcrMr8rDvRy+ONA40qfiuoR
9f0T7iX2V9sDKL+oZ0e4NJsnW9NSPpF/Wyi+GVpk0tN9iHxbwuJSZWFPCJ0n
zncKDsPmWlA47RfnbQhpSslEcyStF/tXhUfPThP3aAIysX5ZqBngo3JiCRwV
z38IpTG66x1xBDgRjwt5e1O5/QkEdvf2n4nEMu9hv1YjARM7B01foz7SRCCW
9YPLXJE4hKheNh9aprIdZWfo/Rg/tF5WG5vMBMKZPrBar7wMh4N6J9j5zhe1
dJ6W3Q8U7clt8qSD/m14FfRlpfcsgWNsP9BhMDosKQQi2P7As2fn8OdkAiq2
X6QcKbLlUD4V2z8aKjmq8aB61MwfFGgyW8bOUX+ZfyjHUZDaQOu1zF+UlLxt
fU+xjvmPKmKe/x6kWM/ygdbrjG8sdF/BLD+oK66h10T9CGb5QtXxM65KnkAY
yx+qUj/484T6G8byiZat2pXJKJoXll+UZXz49+4+ZvlGuxf6Naeof0qWf+SU
qlOOU3959n8gy6osI9dA4D8Y73QU
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.605169998021961, 1.000052177784719},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], Automatic}, {{{-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.809142990314028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.521460917862246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
     Automatic}]]], "Output",
 CellChangeTimes->{
  3.865581337184222*^9, 3.865581378061689*^9, 3.865581438335355*^9, 
   3.8655815272065573`*^9, 3.8655821479724407`*^9, {3.865582320697386*^9, 
   3.865582331901196*^9}, 3.865582837871748*^9, 3.865664196152727*^9, 
   3.866271389425453*^9, 3.8662715765170393`*^9, 3.866271705265234*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"7533177a-6496-468a-8b41-fe9df9dc5700"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxfinds", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"findcmaxs", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865663909662403*^9, 3.865663932574587*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"d6be5c73-15ad-4b0f-921c-853e2494b398"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmaxs", "=", 
  RowBox[{"{", 
   RowBox[{"20", ",", 
    RowBox[{
     RowBox[{"findcmaxs", "[", "2", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"findcmaxs", "[", "3", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"findcmaxs", "[", "4", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "7"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8655815760465717`*^9, 3.865581609225246*^9}, {
  3.865582167862109*^9, 3.865582167912342*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"cd1f0746-89c1-453e-9eaa-fda5008fd8cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "20", ",", "11.778849493033118`", ",", "12.80088247419137`", ",", 
   "7.57895945332243`", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.86558160963658*^9, 3.8655821207962914`*^9, 
  3.865582168818404*^9, 3.8655828380854683`*^9, 3.8656641964558163`*^9, 
  3.86627138980028*^9, 3.8662715768184767`*^9, 3.866271705581265*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"878eb3d8-c304-4b77-9bb1-58a69cd3c3ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmaxfiteq", "=", 
  RowBox[{"a", "+", 
   RowBox[{"b", " ", "d"}]}]}]], "Input",
 CellChangeTimes->{{3.865662074158133*^9, 3.865662080529161*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"505ea0a3-aaca-44d8-b800-ebf707fb8247"],

Cell[BoxData[
 RowBox[{"a", "+", 
  RowBox[{"b", " ", "d"}]}]], "Output",
 CellChangeTimes->{3.865662082973942*^9, 3.86566419646025*^9, 
  3.8662713898053217`*^9, 3.866271576824155*^9, 3.8662717055865498`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"f4af1f9b-b696-46a1-b4c9-4d790150a08a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmaxfit", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"ds", ",", "cmaxs"}], "}"}], "]"}], ",", "cmaxfiteq", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "d"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.865582256571713*^9, {3.865661864986641*^9, 3.865661870412753*^9}, {
   3.86566208553424*^9, 3.8656620872633677`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"64a4740d-43fb-49a2-b80e-d1081c03d3b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "2.544460271897277`"}], ",", 
   RowBox[{"b", "\[Rule]", "46.76112006148753`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.865582260348411*^9, 3.865582838119473*^9, 
  3.86566187261758*^9, 3.865662087561598*^9, 3.865664196470455*^9, 
  3.8662713898144503`*^9, 3.866271576838146*^9, 3.866271705598284*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"3e3e51ae-cd66-42ea-9592-0f75f36b4084"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "+", 
       RowBox[{"b", " ", "d"}]}], "/.", "cmaxfit"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", ".35"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "23"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Ablation Depth\>\"", ",", 
        "\"\<Bulkhead Modulus / Cortex Modulus\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"ds", ",", "cmaxs"}], "}"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8655822888125553`*^9, {3.8655828703592978`*^9, 3.865582893150786*^9}, {
   3.865661258796137*^9, 3.8656614716657953`*^9}, {3.865661876016382*^9, 
   3.865661877235724*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"f56dc3a0-bb99-4d34-af6d-3d92b9b9de3f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVxX041AccAHDZVRO9yEveIg7XeTv3U0gv3y/yklF2E3UkI1bIS4ROqVUm
c5YsTbpmxVy5rii5vOX1uLzUeblfPEihknFpeFYh2/74PB/D4GhWqKKCgoLX
f/7/GtuFyxfu2JF55Sx9lT8F7ZuMpfbGelBny3++N5SCQoEsfo5qAdNkW+r1
aAoeNrBqGaBuA/Y6jWGL8xR02c+O6aB6gmkuP+8bIQU3JUw1iakBUHu1XTl9
kYKC81vf11MjYYqnKf+qcCm+Vf6eUkc9CT4Fxfc/TSzDV7vcA0SsTMjgRhzb
Vq6ERu00WqgkB04YpU07eKugjXLZkKCRBwGt1cvpg6uwwvn4QTvzm7CP70IX
SddgwiGVh28f/AkDwL5np7sWWws+rve9cBvyXKukIT+q4WrGbdMRDyGwfG9X
LX+ljklPi38+GFYCodU705Tomlh2WZBh4XUfSrIs5OXcdQiexYt/qJXBvqr6
zQ29WthAz2g07nwIn+Qjri76OnjpiualtDIRdGexpuNO6+LdmfzOS4kV8HV6
1BmFJ3q4brhbNzmoChLek7fsrfQxafbdwzisgReB7XljXAOkfV5oUFOoBe9s
ke3ckQ2o6vYi8smxOthtcW/ST9cQy9OrSwP21gMnduHySJ0hLlGPSR7yaICG
yQ9KLvFG6F6qPvluayOkye+EBBtT0dbNXkui1wScvMfCuxIqthozJTlrxHDh
VIJYyjHGpXO3mHYzYhArp3YYGprgtlFV56DuZkjRZ1daNZmgtoZ3X5K4BXwO
y+JVj5vi9R0r6aF8Cfgd4BtQdWjYci9/AXlPIDHdIHdFBw0nbaicQm4rqDsE
zgpPbsTKEpOS/sg2eJEz7XRmAx0tjy+EKwa1g3gjI3BjFx3dCJ+heacO6Aur
P7KYaIYHFHlzKYZPIZyuw87WMUdtnQre1NpnoEXV1pprNceTZnv/2TzzDKZb
opqzoy3QyTEkYnO8FMYLwp0UjCwx70i/aMsbKaw2r7nLk1hijK5n7xLfTii1
JRdnIqxQO5ZW5fisE6JP5OhT1zNQw7mBE4Fd4P+DwPJMAwNHH7XMq1R1AbPZ
JrXPwRqZj8SsYzbdMKMz+1qabY1dNudS6wu6wUv86vHQqDW6fifgXFjfA5sy
bqT0bWfiyvfZnlsu9sD9Im75eBYTWepxfwu/9EA0pf/l/mEmhg/WsPMSZVB5
av7DAwcCSSNJfsyYDHieu5JNMgncLm9MODwugzWR1ddyfiGwsKLWK2hCBj9l
MKqXZhEY6y2a2zMlg6hWjYXX2QSqpBT5MT7KAN2HU4pyCXTsO79avpyEUefk
s7RCAu9cdDwdQSPBaqswnV5FoJr/dt8QOgk32RuKr1YTyDHdYulvToIW59dW
pccEutVY93swSFCoOKE8Xkfg8LiBnZkdCV22rpnFzQRquX6Rj7mSkEQMZZl3
EXha9bP4pTsJE9+ySq91E/hmYJbX60FCUKy4U1lG4IO4SQ/JbhI8SgRrJ54T
uPvGQBHflwQ9q6TLdwYJLIvsPZW/j4Qsr7/K9IYI1LXv8fmNTcKyo4Ey7ksC
x562KaYFkiAX7NQ8OkLgnryWvpQgEoLbRLaDowSWhzaWJAST0Dtu5uf1hkA9
Zm1a1CESPFf8nljzlsBz85WBYWEk1NFVcy3fEfgvBT49jg==
        "]]},
      Annotation[#, "Charting`Private`Tag$368250#1"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.3277777777777778, 20.}, {0.26319444444444445`, 
      11.778849493033118`}, {0.1986111111111111, 12.80088247419137}, {
      0.13402777777777777`, 7.57895945332243}, {0.06944444444444445, 
      7.}}]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Bulkhead Modulus / Cortex Modulus\"", TraditionalForm], 
     None}, {
     FormBox["\"Ablation Depth\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., All}, {0., 23.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865582282418696*^9, 3.865582289552989*^9}, 
   3.8655828381370087`*^9, {3.8655828864049253`*^9, 3.865582893469577*^9}, 
   3.865661261416222*^9, {3.8656612977186813`*^9, 3.865661363250016*^9}, {
   3.865661423179914*^9, 3.8656614721276817`*^9}, 3.865661877828238*^9, 
   3.8656641964880953`*^9, 3.866271389844021*^9, 3.866271576864698*^9, 
   3.8662717056237297`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e1cc0a66-10eb-4a15-8e47-c0f8c734128d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"er", "==", "maxfiteq"}]], "Input",
 CellChangeTimes->{{3.865662052216441*^9, 3.865662054175205*^9}, {
  3.8656620969094276`*^9, 3.865662127575862*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"8fde9ddc-67ec-471e-893a-f5c408dd6e86"],

Cell[BoxData[
 RowBox[{"er", "\[Equal]", 
  RowBox[{"1", "+", 
   RowBox[{
    SuperscriptBox["d", "2"], " ", "y"}], "+", 
   RowBox[{"d", " ", "z"}]}]}]], "Output",
 CellChangeTimes->{3.865662054764412*^9, 3.86566210001435*^9, 
  3.865664196501417*^9, 3.8662713898543673`*^9, 3.866271576874733*^9, 
  3.86627170566926*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"b072717f-6813-406c-aaa7-f98d34792569"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxerofc", "=", 
  RowBox[{
   RowBox[{"maxfiteq", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"c", "==", "cmaxfiteq"}], ",", "d"}], "]"}]}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.86566206065059*^9, 3.865662180333991*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"73ab3091-a569-48be-a206-7792e58359cc"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "a"}], "+", "c"}], ")"}], "2"], " ", "y"}], 
   SuperscriptBox["b", "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", "c"}], ")"}], " ", "z"}], "b"]}]], "Output",
 CellChangeTimes->{{3.86566206298955*^9, 3.8656621026565647`*^9}, {
   3.865662137061233*^9, 3.865662180715591*^9}, 3.865664196511394*^9, 
   3.86627138986825*^9, 3.866271576887772*^9, 3.866271705674684*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"23676ee3-ccc1-4090-8e43-2944c5ed889c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correction", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"1", "-", "maxerofc"}], "/.", 
     RowBox[{"maxfitmod", "[", "\"\<BestFitParameters\>\"", "]"}]}], "/.", 
    "cmaxfit"}], "/.", 
   RowBox[{"c", "->", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.865662579570033*^9, 3.865662601079462*^9}, 
   3.8656627515094213`*^9, {3.865662870719081*^9, 3.8656628834762173`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"2946b88c-fada-47a6-90a4-43b3fc6284c8"],

Cell[BoxData["0.006581895476232939`"], "Output",
 CellChangeTimes->{{3.865662574737982*^9, 3.865662583560444*^9}, {
   3.865662871403287*^9, 3.865662884690534*^9}, 3.8656641965161247`*^9, 
   3.866271389908263*^9, 3.8662715768937473`*^9, 3.866271705687314*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"85fc5080-09d7-4690-8c94-643c1412d5e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"correction", "+", "maxerofc"}], "/.", 
     RowBox[{"maxfitmod", "[", "\"\<BestFitParameters\>\"", "]"}]}], "/.", 
    "cmaxfit"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.865662182021138*^9, 3.8656621961864367`*^9}, {
  3.8656622441106167`*^9, 3.865662266442136*^9}, {3.8656628906285553`*^9, 
  3.865662892366302*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"35c5b45b-ccd7-4b87-9d0a-826215a7ac19"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
fKP9KfnZDTr+DySTmxA=
       "]]},
     Annotation[#, "Charting`Private`Tag$368363#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {0., 11.837490287282364`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8656622477682467`*^9, 3.865662267131569*^9}, 
   3.8656628927169437`*^9, 3.865664196574367*^9, 3.866271389941161*^9, 
   3.866271576956306*^9, 3.8662717057423573`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"df4d1f63-32c4-4ef2-8f9b-3b746b999e3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dmincmaxplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"#d", "==", 
                 RowBox[{"ds", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], " ", "&"}], "]"}], ",", 
              "\"\<modulus\>\""}], "]"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"#d", "==", 
                 RowBox[{"ds", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], " ", "&"}], "]"}], ",", 
              "\"\<expansion_ratio\>\""}], "]"}]}], "}"}], "//", "Normal"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".001", ",", "Automatic"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".79", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".01", ",", "1"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["\"\<Bulkhead modulus\>\"", "\"\<Cortex modulus\>\""], 
         ",", "\"\<Expansion Ratio\>\""}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "->", "12"}], ",", 
         RowBox[{"FontColor", "->", "Black"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "\"\<StarryNightColors\>\""}], ",", 
      RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"AbsoluteThickness", "[", "1.02", "]"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"ds", "*", "3.6", "*", "1.5"}], ",", ".01"}], "]"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", "\"\<Ablation Depth (\[Mu]m)\>\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"FontSize", "->", "11"}]}], ",", 
           RowBox[{"Spacings", "->", "0"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", ".85"}], "}"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"550", ",", "300"}], "}"}]}], ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"Text", "[", "\"\<Experimental Data\>\"", "]"}], ",", 
             RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6.5"}], ",", "1.12"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Moduli consistent\nwith data points\>\"", ",", 
             RowBox[{"TextAlignment", "->", "Left"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"3.7", ",", ".87"}], "}"}]}], "]"}]}], "}"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"erinterp", "[", 
           RowBox[{
            RowBox[{"Log", "[", "c", "]"}], ",", "d"}], "]"}], "/.", 
          RowBox[{"d", "->", "ds"}]}], "//", "Evaluate"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", ".01", ",", "100"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "\"\<StarryNightColors\>\""}]}], 
       "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"maxfinds", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
       "Evaluate"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", ".01", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "\"\<StarryNightColors\>\""}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"correction", "+", "maxerofc"}], "/.", 
        RowBox[{"maxfitmod", "[", "\"\<BestFitParameters\>\"", "]"}]}], "/.", 
       "cmaxfit"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", ".01", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "DotDashed"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", "\"\<Min Ablation\>\"", "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"FontSize", "->", "10"}]}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", ".85"}], "}"}], "]"}]}], "]"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{".7", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1.212928192904417`", ",", 
        RowBox[{"Min", "[", "csdmin", "]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Gray"}], ",", 
      RowBox[{"Filling", "\[Rule]", "1"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"rangelines", ",", 
      RowBox[{"ScalingFunctions", "->", 
       RowBox[{"{", "\"\<Log\>\"", "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"erpoints", ",", 
      RowBox[{"ScalingFunctions", "->", 
       RowBox[{"{", "\"\<Log\>\"", "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"PointSize", "->", ".01"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"erpoints", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"csdmax", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"inferencedata", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"rangelines", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"erpoints", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"csdmin", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"inferencedata", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"rangelines", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.865662396449183*^9, 3.865662546861978*^9}, {
  3.86566289760192*^9, 3.865662899495201*^9}, {3.865662971821504*^9, 
  3.8656630126141157`*^9}, {3.8656630532396307`*^9, 3.865663062316289*^9}, {
  3.865663954564534*^9, 3.865664023984823*^9}, {3.8656640757547407`*^9, 
  3.865664107001894*^9}, {3.8656646994351482`*^9, 3.865664721300617*^9}, {
  3.865664770820476*^9, 3.865664773497471*^9}, {3.865664842238936*^9, 
  3.8656649426674843`*^9}, {3.865664983510351*^9, 3.865665116263526*^9}, {
  3.865665321647914*^9, 3.8656653225771933`*^9}, {3.865665367622985*^9, 
  3.865665374717815*^9}, {3.86566545362016*^9, 3.865665588767488*^9}, {
  3.865665620037763*^9, 3.865665658968402*^9}, {3.865665693259863*^9, 
  3.865665695149146*^9}, {3.865665752417264*^9, 3.865665812275066*^9}, {
  3.865666033832048*^9, 3.865666039219352*^9}, {3.8659180754102182`*^9, 
  3.865918158870419*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"bb7c4fae-3c6a-4892-ad6b-f39df62e9682"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {
       {RGBColor[0.0863508, 0.145602, 0.203418], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], 
        PointBox[{{-4.605170185988091, 
         1.003285642989791}, {-2.3025850929940455`, 
         1.0380457909199816`}, {-1.152013065395225, 1.0887686072759417`}, {0.,
          1.1628584212741768`}, {0.7654678421395714, 1.2212826229131475`}, {
         1.534714366238164, 1.2691527807146366`}, {2.302585092994046, 
         1.3133191152097772`}, {3.068052935133617, 1.331259186608892}, {
         3.8372994592322094`, 1.3274813538966557`}, {4.605170185988092, 
         1.3305420279148752`}, {2.4849066497880004`, 1.3165478276252967`}, {
         2.70805020110221, 1.327193347908715}, {2.8903717578961645`, 
         1.3281740504797106`}, {3.2188758248682006`, 1.3258615565192415`}, {
         3.4011973816621555`, 1.330494031334664}, {3.5553480614894135`, 
         1.3280294724686326`}, {3.6888794541139363`, 
         1.3282722539974898`}}]}, 
       {RGBColor[0.260705, 0.406664, 0.445423], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], 
        PointBox[{{-4.605170185988091, 
         1.0026866757548552`}, {-2.3025850929940455`, 
         1.0344167969799964`}, {-1.152013065395225, 1.0792945353063936`}, {0.,
          1.1418323338003318`}, {0.7654678421395714, 1.1820592405831385`}, {
         1.534714366238164, 1.2142426972288591`}, {2.302585092994046, 
         1.237515884837215}, {3.068052935133617, 1.2277132827734731`}, {
         3.8372994592322094`, 1.2186115030103675`}, {4.605170185988092, 
         1.2075857760218767`}, {1.791759469228055, 1.2214999965296829`}, {
         1.9459101490553132`, 1.2263002545794082`}, {2.0794415416798357`, 
         1.2300963985478182`}, {2.1972245773362196`, 1.2336956260653864`}, {
         2.5257286443082556`, 1.2330333343584994`}, {2.70805020110221, 
         1.2308469368181068`}, {2.8903717578961645`, 
         1.2319359945057635`}}]}, 
       {RGBColor[0.575819, 0.695886, 0.635552], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], 
        PointBox[{{-4.605170185988091, 
         1.001866744022619}, {-2.3025850929940455`, 
         1.0272790542061252`}, {-1.152013065395225, 1.061301526113696}, {0., 
         1.1034334492029383`}, {0.7654678421395714, 1.1296912677816027`}, {
         1.534714366238164, 1.1396029410287019`}, {2.302585092994046, 
         1.1483677858646164`}, {3.068052935133617, 1.134417791380786}, {
         3.8372994592322094`, 1.1172311572226061`}, {4.605170185988092, 
         1.0979427465102365`}, {1.791759469228055, 1.1420941160861269`}, {
         1.9459101490553132`, 1.1436376010207154`}, {2.0794415416798357`, 
         1.1453759574003108`}, {2.1972245773362196`, 1.1474747379264936`}, {
         2.5257286443082556`, 1.1491540499755462`}, {2.70805020110221, 
         1.146379645199064}, {2.8903717578961645`, 1.1374626907120455`}}]}, 
       {RGBColor[0.866077, 0.862389, 0.597576], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], 
        PointBox[{{-4.605170185988091, 
         1.0009404371943789`}, {-2.3025850929940455`, 
         1.0157704720436695`}, {-1.152013065395225, 1.0351153486897342`}, {0.,
          1.056370624425281}, {0.7654678421395714, 1.0673818871150402`}, {
         1.534714366238164, 1.0728630980636353`}, {2.302585092994046, 
         1.0744300252043604`}, {3.068052935133617, 1.0466628342736763`}, {
         3.8372994592322094`, 1.035829122193927}, {4.605170185988092, 
         1.0289969720670218`}, {1.791759469228055, 1.0732926989840614`}, {
         1.9459101490553132`, 1.074095878082254}, {2.0794415416798357`, 
         1.0735758945451865`}, {2.1972245773362196`, 1.0712135524585498`}, {
         2.5257286443082556`, 1.0664492605006515`}, {2.70805020110221, 
         1.0571838481930091`}, {2.8903717578961645`, 
         1.0550046763550098`}}]}, 
       {RGBColor[0.957885, 0.809857, 0.369177], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], 
        PointBox[{{-4.605170185988091, 
         1.0001077194834607`}, {-2.3025850929940455`, 
         1.0045163828999326`}, {-1.152013065395225, 1.009335082895547}, {0., 
         1.0143061381828296`}, {0.7654678421395714, 1.0165291771628895`}, {
         1.534714366238164, 1.0170231631371955`}, {2.302585092994046, 
         1.0171919001682825`}, {3.068052935133617, 1.0141686662029277`}, {
         3.8372994592322094`, 1.01070725384161}, {4.605170185988092, 
         1.0081475565807179`}, {1.791759469228055, 1.0173811883092876`}, {
         1.9459101490553132`, 1.016615630792919}, {2.0794415416798357`, 
         1.0163519469219264`}, {2.1972245773362196`, 1.0160070855169814`}, {
         2.5257286443082556`, 1.0166636935847233`}, {2.70805020110221, 
         1.0162579094649837`}, {2.8903717578961645`, 
         1.0168429493156712`}}]}}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.0863508, 0.145602, 0.203418], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl2nk4lN8XAHC7GTPDvJNSRHaSVLZku0cplVCWokIlKkmlUqSSytJClqSV
kAqVFC3Im3YlyZZCviqVqMGMXX5nnt8/PJ/Hu5z7nnvPved5aGzY7uovISYm
thF/iH47TZl8+85WHu3V/Mx2D4dPgmPLjao28+iH8+yy/dCnBwJu/fTn0flF
B2+4ouvqi25OW8ejVVnLTxij++29Z1p58+hD/t1+Wmile1I3V67m0VZtPnWK
6NVJbvmn3Hn0BYua3UNsPokQH5lxYwWP1jz7OaMLfWlHZt4zZx5dpVS1tg3d
5tyTO7KYR284vC/iNVricZqB0iIePfO3VfNjtNZMyDVewKN/7Rt6eg8dwEq4
scWGRwvFQ7Uy0bHh5tOPWfLoGQdtz55D3/jVcj1jLo+erK54IhFd6XlMv9SU
R8+6PjIah+56aXi9cQ6P/tow1BmFlp9bp9dnxKOvBk1wi0DPytl/Td6QR/+Y
7mQSil4+UUvPYDqPVq7Oi9uBDjlambNQl0ffm2rqvhWd0rdTd70Wj9ap7Twd
gC7aMCUnQp1HNxfW2WxAN9TQOmmqPHpFRL+nD3oQNl+9q8yje/+6t61GKxco
6FQr8WiTd4KaVWirafezOxV5dHTjpxke6LXxPtoyPB695i2ryxV9cEw6W0OB
R+tuO8ldgc4Iuqllw+bRa8PXn3VBP/nsnuXJ5NFb7iUcdEa3Lx3V3C3Do599
VnnmhJZ6lJWZIInxFcgFiKw73VEzTwyfJ1i3QWSHtN4rL8YoekKA1n2RN8ue
12gfpmjFlys3iJ53PNTuytgARV9sHF8vel/+95/qU4QUreqpdW85usr9dIZp
L0WzmC9WiuL983Su+vK/FF2f2+XgjuaafEnf2kXRPWMXjq1EG2dGT4v5RdFV
FR85Xmg3yig9s4OiWx5ea12D3h1Zr/b4K0UnZXH6Rd8v9W/E5aY2it4ACq6i
7/vAR1tN2ELRpcvv8P3RTVVvLnE/UzR1ZrB6C3pqvvIlh3qK3l8StzgEbatS
MdXvA0XvVmtpEeXX9/iWiwerKdr4/s+8/ejMzQ8uFL2m6JcnrDqPoZ81+qrU
vKDow4tPrjyB/r5I9kLXU4p+bX297zRaX2flea3HFP22yv3BRfTt//rSEgsp
WumytGkx+vRp7erg2xSdcfXW4TLR/CEe0svyKZrWbhE+Q5tfKt4pk0PR86zu
O9ShSz3Dlu4/R9GJ/yS3C0Tzt/rfyMZIitZ/nvjeEtdX/sFZxvMPUHQUZT3b
Hn1q5rrN08IpmtEvLHBCLz/xpK5pF47nQM/E9ejGRUdvOm+i6LNWoTvi0N/K
mL4WzhStYGa4vw39IsjyzERHig6rsu7/jb6msvVNrwNFZ9fRyQPowLC3c2/a
UfQv7QhzBXk+6TFN4GqaUXTxUSNVQP/LU6xgTaXokrGBqOvoKeen6Xz5xaWP
P3jjmKLAJ28veMf3dHDpLfUnZ2ehIy9dGJD8xqWrN1WYFaJ/ZihV6rdy6XcB
r668RxdfU9ge8oFLr52cKqbA5RPXovEH0iVc+pRJc1Mi+vj7L8sMT3Lp/TGa
YgUU5vODarFtHJcW3mkaqED31K6ZtiKaSytGm3Eb0J6NjT17Irm0v0Jr5iha
t7U6tXw3l7b5KrPckccnFb/L21y9uXT0Xq/KP+gRmYzdYUZcuiCBsndW5JPw
XMWk8zO4dLDD7ZaN6GGnuNsl+lx6ru3T1P3owZSQzjFNLr0yc/mmG+h+zYXr
opS4dO1KxSiZiXzSa9vpeEIMxyv28fILdF335kWWVxXoHU2K4T5KfFJr6no4
Il2BbljwVjIM/WG/Venjcwr0gwcKN5PR75nyxgviFeg1+218XqPf6txVXbZX
gdYJdbAyn4zz03tM4L1Ega6pudk2cQqf3K1KzDrcLU/rZ8a2dCnj+ko55ejw
Q552yJDu4ajwSeHquD72f/K0XUDJ9Fnogh+RC9Lq5Onhp3VyIeh88R1fb5XI
0wpqjSeG0DlmzlrNcfI0YbbEKajyyflLclnmuvK0R7pkxKppmM9tRzJ/+3Bo
9R+BW1Zp80lW07kCFS8OPfOt/ehB9IuFBY8d3Tj0hahHt3PQbLWWT3kOHNp8
bsS+fnTaO/MJQbM5NB0blHhWB9fPrM4jXeIces7k9P++6PJJa89y/+5sNq0O
tmJx0/nEJlRN/28ni366c8DbZhbuH+sdsjK/sWjSN1ttJ/qo0w61la0sOvjZ
b6mr6ErtCsWyGhb97c/PhZzZfLKy1l/8xAMW7ZmsnPoFvWP2zU+60SzaJFl7
xwljjL/T6pSPBosuN5tGiZnzCdPXq7dqlRzNsuXM87bhk+qZ3xtl3jJo87Ef
X8848ckxf2X7ptWyNBUlqKvz4ZOlB/4Koiul6SJjL5lPu/hE7N82w3fuUvTo
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
/w+NKbfn
          "]]},
        Annotation[#, "Charting`Private`Tag$368842#1"]& ], 
       TagBox[
        {RGBColor[0.260705, 0.406664, 0.445423], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
gPgf7za0Iw==
          "]]},
        Annotation[#, "Charting`Private`Tag$368842#2"]& ], 
       TagBox[
        {RGBColor[0.575819, 0.695886, 0.635552], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
+WXcHNS/s3i+UbYXfUvwVYnk56CUGPXukK29SCa53rQNbD708I22WS+akalS
WiHAQez4hFu513oR4evX/QQcO35VMqCnF03nr4qrF+QgvZy9Wzbk/kLGKUIj
M0IclCrW5RG5uR/Fh0sZiItykMVJ6/36pv1Ig3/a0RJMr2rUmHHpRyqjR1bH
gs+fejPjEt+PMjRb3rMYHGRamxuqPdOPrknZHhBkctDs1XOZI8QA+hw7N9/D
4iDLIaHvRsZD6Mm5iiuuyzjoSp6EqpXTEOoVjJ1NBGecVPU+5jeEOnOO6teB
OUP61MvZQ0ink0tz43IOujXsv7mQMoxyUzwrJ8FVIxPhjIph5P1wJt9XgoPU
x7q1W9b+RhmJO/ttpTnoup+d2aNgyKPzpmllK2D8X9mJ6jGQN/zPCPWBs3co
9BWkjqGCm/+ZLVHgoLr5X5fzSyGvG/hfOAmWvH46L2cIvhveVWlKKnLQ07Dr
/Bn7SFTOt/DfmZUc1JWUUx4P/bC9OUIRUuGgHey/qgEPx9Hsr9yMQTUOWrpR
68+K6AlEWbZ6Sk6Dg6bbOkKEPadRTX/kUT8tWB+2boxuyCxKSXG6zb2Lg1gU
raTPd2bRKPmgXBrssmdThtv9WRTdjPq3gkUaFIuiS2bRxmcOyBNs201p7u6Z
RRlv7k5/AU9R3i65rjOHoiqEuIv1OGjjXqM7r/7NocChO+c8d3NQUMSuREv+
eWSifsz1Jri9USt9iDmPYmzYbllgf5s1z5asmkd8P77GdYDr3YWbnCznkXbw
kux9BhzkHlnPohTNI2t2Pu/mPRyU2XwwWs9jAV03uTYruhfeL6FCNPguoKXn
W6U2gI0d/o3YBy0gVfVguwNgzkCqoe/9BVSflrn3Llh7YYSrsGEBLWxld0gb
cdCQ2Ov/aFJcWP6Ba+AmYw66geyVz13lwlF97BvXTTmoJCaad88ebjyw8Mq5
9iAHlUcd0Vhpyo2796OgP+CqiPXOXObcOGtEpETWnIM+htRVP3fgxpVfLmh6
g3suCd1cdZ4bvz0rHit9iIOWOAcwaFncmPgTftfTgoNOb/aSqePlwRYht5IX
rDjIZ6OOaS6VB4vU62uoWHPQpXWMq0GicH1F1W1TcPCqwi5tKR78mWiISgKn
yAymP9rIg+VaRrw3H4b38x1dHXWEB1vfly+2suGgRp4NNh7HeXDn31UxF8Ft
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
wVaenFvbQ2lY4vVuSj347BtlrjcxNNxTZ61VCeYhidKbCTTsTtc+Wwy+LW3j
bZZKwx7OySfywfnekb++5tFw6MkZv3vgnhVTHzhVNPyE7jp3Csz5eFVicw0N
NxtotjqBufwEXM7Xw3i+Ke6xBEs1LluY+UrDijqVP3aAVa+kGGl307CySiHv
OvCW1crx/v00LBmj8UgefCBg8wa+vzQ8tO76XR6wo3rFZYMZGrY7d7OGA9/H
nl/0akO56bjTM8u3Gxy60dxJRISONfMSMAEmur3uLleh452BfULnwHUR/35Y
r6XjNQ8FXjqCv2kGqCdtomOv1m1tRuDJ6Ki38piOFW8bS8uD1Xc9nl5lTcey
KflJBBRjO0a37nZ3oOPnnu9ms8B7E9nRhc50PPqQTLsFdh6vU9vkRccW1waf
HQInpY/Y7Qij4wXaQGgHfP/n7juXeyWKjr3tfr6oBD+fmZ0g4ui49kyfeAq4
6SD9tn4GHesywnYfBgtR1KpMK+j4oOMz5jt5DhJ//FQk6hUdN1BO7XwAVrbV
tGmqoeML1et9fcE6RYZ/LD/TsWOd3hIV8IVjJ5SPjNJxzBoFbx85OO8YY17p
f+nYcOIaYQCOKT/P7p2hY/etPTzi4EdiwVZugsJY3kTdulgWvpdeZ970XiGM
N/IYj3TLwPeP0s/fgQfBfn6qAtIwv2pmLXbWwljY90NlrRTkz40VLzY7CGOK
uKpxOHheOy6k100YT6QY7xEFZ1kZKegHCONHBZfz+SWhngl7dojyRBgPFS2z
qFoO6xstv+NbiTAW++f5+yy4Nj5coahcGEsEsE4pg1Myj486vRPGdq/ClIKW
QT5kS4W+6hTGBX2+JtuWclAs53p5gIgIfpf8tcyFBfE3PZZ2WEwEqxwydxUA
uy3YhW6UFMGyHGsyiwn5kL7NoltJBAfp297sZsB4lYZHdXaKYIF1p6uNRCEe
rc0Vud1F8Jbxk/G9NA76zF5582qNCHZfohGznsJB2QErBTXrRbBMMioq4OUg
P/2VQX+aRfAJOelPq8Cy7xUDXLtEcKwjTUGOh4OOf1bwOzgpgrPFJbUXFkg0
NSzvpqIkih/6PW1IniGRhKTM3np/URz7/f6OeA6Jhr9JvwsNEsX1US7JAuDK
+9K79W6J4jfN4uvPkyQ6qiStWxonip9a87Isx0iUu15KM71QFPemGbRK/iaR
poHE6vPfRHG2iUF32QCJ1MuEAkWlGXjXt/H61B8karW5Jqwmx8CMRiVpObD/
3OTd3QoMbKm/W+h+F4kacW/WZVUG3hDUWJTeSSKft+x3QxoMfFvqUzD7O4kq
ms/S35nA8wPSRlpfSOTiMxTz04yB19m2pX9qJ5GI+FGZhYMMHKx5R+M42NFm
n/qWwwwsLrj7Z1wbiSjdq8wyXBhYO8qyjL+VRMajHXf8rzLw40d9Z8WaSfT3
9iHppAAGrpedWF3WRKKUjR8y/gtkYJ4tCwWO4LFzpcW/wxj4pxrmetxIojuz
d1pt4xmYq0tD0rKBRF+ohlLbnzDw24osw5d1JHJd+SyN7GbgN9xxrz/XkAh7
S0+19jKwzIi2RQRYvCrQpLKfgcPV1/bog6sdrKZu/mbgxGsrRorekUghcc5k
5T8GHqMaXY5+C+0z90xbMJl46aPCXsM3JNq78G1fOWJi42z5fUkEiVaY7s5M
02XiBrG+3H3gqaRH/0L0mbhut+QbHnCWZkDmISMmXlZDW3uCTSIeH5WZ3xZM
7NA/G7OukkQvhs9krfBkYs/klWKPXpBozRf+uaAkJr6mzTFwKiGRqlz9w1f3
mZhaQLXjAisdizvAlc7E5u9Em5KKSST7WyXbN4eJI4UiPzcVkYjBY3jQvYSJ
E2LUdbY/I9GfVWE5+z8xsdANc9vPj2A+PQ+aRzQxsbuQ+vNj4JFnUgu1n5n4
9W5cThaS6NfOfHO970ysGTQaIgBu2/9xYcsgE8enJb+Vz4d48BW1kKaw8Dkn
W+/5hyQqq2zlshZg4S1JYlvPgEt4U/PuCrFwiGxI448sEj0OX88tymRhIuOa
bXkmidIe7M/nlmXhhu0/9x1Kh/X+JWGpvYKF7XUSjhWnkShRrZv74koW1v/2
sZ8Fjin2svyzmoUZZ8Jo1akkCqq5w9O3lYU742+Y0FJIFCBiW6CoxcJJFXpn
DiWT6OrBlVaO2izsz9ZNSkoi0YXvRQXteiycu9DWtCKRRG5ki9WH/Sz8aTza
lj8e4nlLCi/1EAsr3HAx2RpHIqeLLoX6Vix8Qmv792OxJLLlm+Rl27Nwxavy
zOIYElntZRfOHGFh7T671213SHQoMth6mzMLJ3/uMJmKJtGB5n2Ucyegvy+2
bhYDm/7/9yu4qcLRY00Uif4HeqRdlQ==
          "]]},
        Annotation[#, "Charting`Private`Tag$368842#3"]& ], 
       TagBox[
        {RGBColor[0.866077, 0.862389, 0.597576], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl23k0lN8bAPAxY2fGzGghS/ZUUllKJfdqQ2RPKNFC6msLkSVJkSUtkoQk
S/YQlcryJpUWlF2LsmVn7Du/Z87vL+dz5p17n7s8z33vmUP6pKupPZlEItEo
JBL77yFRkbyC/5gEf4iK5A8KC7mElitXOzIJvgs8z0vBt6cdnvbaM4kgb+OZ
x+CGxue5a+2YxNnaBD8nsHWUWU6kOZMI8SrQ4AP7c8xvzDRhEj05r6ZGySz0
0C05u9KQSVSuGzP6Cf5rOJo1r8skfCimX/LADgK3Ms/uZhLGS7aZtuBQ323r
g3cyCXnOS5yHwJl9vzOStsPzl0P6doIHPyplNG9lEjIjJboiYNr2hnXjykyi
eCS2jAe8+YlfOk2JSRgFlD+f5mAh92ufn+xXYBKk4wfXtoKjx88rnJBlEjZv
bCI/g5+fFH3iL8UkdpaLepaAZ7BjWuEaJrFU15f8GBywyJUqLcQktjT5650H
Jznlyu4WZBKKwo7YAfz2p3mKJR+TSF5XnHgUzPk6JfkWhUlkjHSF6oAV1uvL
ZJOYhEeeG10LrBM79vjDIoPYb1s+pQYO99J+vDjNIHzTKc2y4JzuXinRSQYh
aZDxVQxcbX47SW2MQejNOousANNV/zz6b5BBFAe/zuQCqySHrL3exyA0z7P6
l0gsZMZQfpT8j0F8uJTmMwOOGfFPbP3LILyYA16D4OLjcpKTvxnErycb2v+B
W6u/PKT/ZBBfPHVut4PFc9Y81GlkEB8bvYqawVpiFeKn6hjEygsa8vVg2/Cz
CQG1DMLZQb2uBpzsWBz//BODKD+CWj6AK5ttxb5/YBAzp+aV3oG7D/DED75j
EKU/jJ+XgxXlLeJkyxiEq5SC5SvwwehFUfSGQcTNm7u8ADtR0h5YFzOIeiu/
vEJwXvt47J1nDGLwpWDWU/Dt23K1LnkMQufIic05YHd0mMsgh0H41Lb+ygSb
DwfvWp/JIDyVX+Slg7c9fHGe+wmDYJzXTEsDixj0pHcmw/g3lLxJAc/OrW4j
HjEIpZTxscfgEkufg34PGIS6ynBFIjiRJyvQMoZBHPM9dfQhOPDFjxfqdxnE
v84J4QTwSXuBIeZtBhF23W8wDrx3haYs6waDmLv0resBWO6dk1V1GIMY/fN1
IRbM7f7wVlYIg9j4QU+N7V6pmvfXrzIISz2piPvgz7VL86cDGYRq0HoOtnMC
NqvsucQg3MO0YmLAkZvsHNf6Mogab42DbLv8up244MUgFuxZ4mwbR7xtaPVg
EC+cEI1tlZ1j/C/dGERB6pIE2yv6ZLSjnRlEugKPAdtT9828z59jEPoCKrFs
Nx+4lmt4hkEc+c+SzO6/eLKoc+NpBnHN1iyc7bjUblG+EwwilLSwmR2/v9kq
4382DEL0zMZxto+TdULeWTOIkezX9ezx4wLvkqQjDKKiJ+g7e36k7TLGLpkz
iIOqNoPxYLJQq+JREwaxK11Gjj2/XaV8thqGDML4WM5F9vx/cNp5b6U+g8D/
1fc9AqeL/fdlTIdBEINu3uz1OufzdXuuNoMwzfLoSQUbKC46h2vB/lkd8ekJ
WLl5U+qZXQzirfWljxngUbVbdBl1BvHpncWqXHBdZ/mB5a0MwkiM5ZAHLopi
+f9SZhCy2VV1BeCLLJO+GEUGEd4UP8/en0vZKyoExBmEEz0ssgL813r/TK8I
g7Bt+1H4HlzB56X8YSWDOJqlNlEFDj7THBcoxCD2PjpdUQsWlI3zmCQziO58
z9tt4OHvnzPrlumEuOz7oA5wbeD8n7wFOrHS6l8kOz+j2o4ZnJuiE4oey0PD
YNG4tfJ/+uhEu7D+dxLk/9d4m5uj/+jEjSQTdXY9CHwYP03pohNRlUO5fODe
pNWfFdvoxCdHn19M8It0IVf3Ojrxlmt5kwLY9PlyMdcbOvFDk++RMZj75W4Z
kWI6IZm4TtcC/KrYL2LDczqRvsqN6xhYqmTaxiiPTtiYuJScAQ9XjJAfpNAJ
ad5MsUB2Pfv2x0DpBp2QM7GLLwJr1Um80AqjE5ceyAS/AY/WH11rEkInHHm/
BFWALZubRy8EQnw2pa++setlW21MuSedcOMoWDkMrhgo/2tqQyfukyWClKC+
z3Mnefoo04knDw2FisG+WSui4jbSietmdlpvwXOHwvLeKNKJW++FAj+DZ6Ld
+xdl6MTXX9t3/QZPyey3C1pNJ3hrNW9T4Lwa0+rXjyDRiTrfBwVm7PNtyPHA
zjQhQvNZ/HMOThaqVzO94v9IiDhgmLqFCq7z21VS9kCI2JHwuVQE/I2PprL3
phARbWBH2wL+Kl8oYeAtRGyYQqG24EqbxQkbPSFijbzxz7fgwuo7KVeGaMT9
ooKOu1yQn9GR+jo9NML88orKZPAz67BxwXYasdt+6+sCcH5P4N7YBhqRviK4
qxacw+HW+fQNjbhF4tpK5WahJ+qGsr/CaIQ8eSQ1Ahz3kD9lmwKNMLDMbrjP
A/vB+WrywHEq0fy0Qn2Qj4VSWh/ki1lRCbveqqol8If9+WX6ZlSiew/hxOCH
/Sn5+0e2DpV4WX6+Zxs4tmabsNMWKrEn7r/0IHDe5v6rgxxUIqddxFBCgIXa
Ro3th1IFiSjlg6K2giy020tScaRfgPh8JqJMWAjy44ROSnKXADEYzGWuBL52
yE3Sok2ACGUpLewDf5arWFH6XYCwDnW55gW2qLfniCgWIKpqFD1/gN225P5Q
CIHnRX98SaND/P27Io9LCxCzJSrbDzJZiM/Waqz6CD8xPdTQWLUS8mdTdzP3
V17ipmSVqrME5J/9mn2t1jyEystIbhd5OG8ujUyEfOYixPWbMxaUWYi05KxU
Y85J8K30MUrRgPk+vfuy6z8yceLc3m/X97CQa3bOqkFLDiIn/n1W2SEW0nwR
fpbz63J5LWWLbpcl5EfjvHJP+kL5ukXSe8KehTa8pW0MiJotH3q8+Tm3B9TH
AE813WdT5SppLVM/LsP7y7zox6q74+VWfxLOrr0J7ekzz/hnscovvN6elhoP
438eLVXNNVDOazmnYZvFQhJOun/5GrrKBS4yT1QWs5Be5N4LVqJt5axvJET+
APtvz6Shz53v5armKTu4GuA8Wq7yvufzstzZkJGe8Rfq3yGFDq8zL5Deg0it
3EHY//bcWQcE6tDOXWbBlFnI59HtDp3pv5H54sZUT8oo6t39fKlOshvxvhFQ
v08dRUcG+H/rGwwg96LEv9wioyggW1TR8tQAcuaIM9wCTv1P0eO07wB6fJ5V
aAUeG9jPdyljAJUdDT6eA74xGKj+lHMQLb7YxGsiOooqhqYi6aWDyCjiP/OY
NaNImdWh1bhpGFm8UuXllhhFh/NHw9r3DSPL0VD7jWB/N1Lj0NFhVG8wHGoM
/sSS+I87fBhp0QixOPDpUcv72/8No3X3zfU2SI6iuLGakQeJI0he3uuS1tpR
dNXXxjjvOuxTEwOp7dKjKOZnebxyNOSh1zr6EXCGpkxPbhKcI+naL73ANUv/
LuW8YiElZuvG5+A1V92yMwfgPdZcolBZZhQ9i7jKnWo0itQ/7z++QnYUvR/s
NpE9NopW3A9q3AxuOaT7MNlxFF3kjuHWBy8JUdUeXxlFwc/+xQSC9aJjTiQW
jiLd68WeveC/CZklsavHkKedo1623CgaXxTgFZEbQ5ko8HwFmNvWxez+ljFE
s+S2aAUrSav239MbQ1xrKIe55UeRd1rJ6rt+Yyio8tRmGzDtaa175J8xJHFj
fcoSWFpIpUxwcAzNSDwpYiiMIjW3aL4bM2PoQpB9qBzYWsUqKZwxjvaF3Luo
B0570VF9fe84SqleHXYbrFk+qRiUPo4El281Cq8bRbyNMhlKhePoxPJpJAOu
7zda11w2jv5NUX23gM+typJXahpHZNuzpwzA952PyzRxTiBZcXlGEHhM7KPY
hpMTaPpmxuZucNnWibgG5wn0Xt+8kQUO05Fec9lnAn0/xG+6AJby8BNpuD2B
VJ7L1DEVR9Ghz5tXBpRPoHTRrund4IyLsbQ68UlkEvB4SyTY8+b7SH/FSZTa
EnohBoxSxwTXqU2igx/y7z8CN9UaCPjrTyLaiNGFAjBlHQevgu8kErmclVQP
rtFUvv4teBJdQ24/foLjTI9y+92ZRKewyUQneEvAc85vGZOoYDy4ahx8vPEs
h2/zJPq8KnacsX4UbRiICZTrnEReeSKbRcGTpMrlmuFJ5HJs4qAU+IaS5JIs
9xR6lvFLVhn8+mrdXLXaFKolGR3VBYc8WPa5iKcQTSUkzhBskqc0K2Mwha52
HHltDu79ETLtfWoKRXj1x9uBV6rsmpCOmkK6J7J6vMD5RGTynYdTyLzKiOkP
NjD6a8yROYWOsrjWXgFfcwrO/Vs+hVJOVrSFg8ee1Do8GppCjf0GMwngm+oy
K4Vmp9BNTz21x+D1lZ7vAjinUcWlKNM0sF27qNRxsWnUM7RuWy64Rux0q7je
NGqz3Rr3Bnwu68X1G+bTSJd0qq8MzLWDb9uC7TR61iYuVgHWtHga9dNrGr1T
01GoArd0kbT1g6YRX8KH5c9gDw+zkdeR0+i21OCbanDW7Rn9uNRpFGen86sO
fGCt/hxf/jQqF7iBG8HtuQ8zfN5Mo9OF0debwf6aLIu+D9PIstaxoBUs8mUP
l1XdNHJpFir7CS6yuldY9Xsaue+9k/sbbNzbc0Kjbxpti5i4/Ad8nSuybDVp
BmlHBlR3gGWi/zhdF5hBituLdLvAZTIqYtOrZpBQQt+TbrB1wbVPDjIz6KOq
Qu8/8BRq9m7aNIMkvc4L9oKjatYrHNgxg3p+1An3gTfZ+Dc83zeDxltNltiu
GqgJkjeeQbSByS/94NO+0lvvHZ1BgiEf/AfAJD7PP5xnZtBrmS/0QXD8/Q+R
nu4zqF9DIJTtbQqiml2XZtA5fLOD7bqi//rNwiC+gqNSQ2CXvWWx76JnUEFZ
oDbbfHV0HdWkGWQbU3CA7VS7U5PJ2TMo64btVrbxyPMU5ssZdHIdN4XtX5d4
TYMqZpD1oFQpu31vwaOkseoZdOrExhNsM+Nzn55onUFGgo9Z7HifrifZfO+a
QcPui05sHyw2FdBmzaCVYiXN7PF1H0h7lT8/g+6EW6qwLX764KrbzFnU0iRS
yp6v4rGEymWJWbS/XJXVAza7MuLuun4WmYSsEWU7PDG61hDPotCPO0zZ8z/b
0hZKdZlFp15pR7SDox0Fbbx8Z1F8qvuVv+AtMzu2/gmZRZKdJT7s9XVYfa81
/9EsahrecpG9/hzpFbmiObPILUQu6Bc4YRvrSlDxLFLgfn+PvV/qDutvMP8+
i56aJrWz95Nz98Wlkt+zqKcvVYJt3gtP6uT7Z5HAUt+5FnAKZ8OTm1OzSN/T
/At7P2pFc/hNk+fQ762fMNutspuN7ITm0LjYpuomsGfhMdlPYnOIWG3vzrbQ
3vDprYpzyJ/fQoXtrLqXX+LU5pB5axeN7f0nux9RtOfQ1bNTfGz/HWV6Oh2a
QxpJrvJs+13Buo1WcyjrpPoptlcxXMS1HOYQb4zSe7YLkuJZT9znUMTanYfY
8Rhs+VQpdHkO2XftWWS7t3wq9mLEHPr0aWMzezxXjeSc2+/PoYGi1l/s8Ur+
MdE+mDqHlsO30tnz89rl8srCfOh/q4gHe/4OL+X0iZXOoS833HnawKzIH6XX
Ps2hwSD5Wvb8R0jwRg01zqGamZVf2eulkKvuYNExh9LqFUns/HqreWpn+fAc
SpnZ48zOp2Nfb9MU56E/A72V7HyZPlrWcZtnHg08l5pj76+ogYEXs8LzKF7k
qcQIO7/8RCNOSs2jvdZNV8bY+cWvY/tFaR6tsAtQnAKfivNUVdsxj3SFIoTn
wEvrk3ke7p9HtEPt+5bA6nqLeS7H55EM39IVng2j6FvLhmvN5+ZRs8nNO4Jg
J0dLS+w9j0ZK54cZ4OTrhSTm7Xm08h5HvAR49+r2Bt+EeRT++dSQLLjlCS2z
M2MelaUL39sApn04a/L87Tzyi9nXrgHOPHxfXrJmHtGZ+VcweF935WzIj3l0
JrTHTRfsyymVbDk+jzYduqhqBf63p2lsXm4B8d80FQoAX6mjfDy9dQFFbDMa
vA4WP7k1vnr3AvLLvMsTBTa9cmPvI4sFFNJUwHoCLi/fE70ndAGJpHqa1YOZ
nLsSmu4uoBPTn6TawA66qqnnHi2gqLcrVvWx4/0uWxT1YgH5pzWeXwYf6+Bs
6OhaQPqrGeWbNo6iGc6Pwle1F9FRjjqNW2CVg/p3380toqLOmEErJTjPbu6N
P8K9hMbqui46gFvrdqUMMJZQ2a3L0+7gwKNKhcLrl1D9sX+VEeBaJ2r9qSNL
qDI/+HwJWKaA6+f0ySWELx44UQX2mlzsiHBZQqMdfeoNYMmA4bHC4CX0/Ybs
9QGw061aJmfREhJMdIkT2TSKiPqPa2LLl5Dr4P4gWbCwCCGj9GUJMQ5baSuD
Xyflq5h3LCGNE7G794J5n90xTaUvo2etKrPnwMemwqw1xJdRg8sTe09w3s6g
k1/XLaNzUxJxl8AW79zdJ7SWkcAnf7Nb4LQGs6h9zsvoG6uoLg88I7qO+O6z
jMyvefa8BBvYzg0dD1lGLbcsMsrBY31Jej6PltGkzje5GvD+zZ7e3DnLkLe3
fjaAYz110u4WLyO9iDK1n2Ct5SHS0+/LiPS1tPIf+M6+t8q72qD/vKKpAXBX
WPSxqv5ltNv/3FsWeHvtmfDD08vox1t3mUl2++ESx0Y5SFiRdmL1LHhYiWd8
Oy8JnxuperjA7q+WFRZAI+Ge8d2Fy+A97j+k3q8g4Y5Ms8Nk5VE0sKLypYAY
CSc9eniFExz9MtfQVJqEHU/lqXODtazvd8euI2H/q+KuPODehUD/P5tIWPrm
xY284KhH54QV1Eg4kXHEkW3NPeZZTjtJeFuCvizb3V27tQsxCW8u6bNif//m
9XUtswdIuHq5ko/dvsYGhis+RMLmk25b2P13fJ3jum5GwoIbr3zhAEe4diVU
W5Gw+uawliWIX41Zo7rCjoRFbosfnge3Fb38bO1AwtM/a7SmwaFHHp947ETC
oo9V746Bt86Fz/S4k/A75zajIfCPBM9byj4Q37eT7j3ga+i4woXLJPzGwnzm
L1i5Q6f0TTAJ37t14E8ruPnaVnPyDRLm46uWqwMHrhMb0I0iYRsTvw+fwBs+
cwbdiiXhhqmutwS4wWlYpCmRhAuvP1zB3h+XhFryxNNIGEVplOSAv5ln/84s
IGHPQ6dJMWDf6WhP1ksSTl8jHhsGlo0LENheRsJxcZx+/mCvPyY7Kj9D+wPP
RezAUkG7vvF/J+G01rQaY/BnOfkzJs0kfLBwxQcMljg3E93WScJuo+WukuAP
gh0b5ftJWKizZq0g2C3vS8V/LBLuW9wqPAv5VTmRyJpZIOGvh3a1fwOfu7zf
QHgVBxbO0e25CF4hs7nTSpwDq+zuCTgBLq0U8U2S4cCxamei9cB0/sH0TZs5
8KcJEwsR8IvoKIquLgd2or8lF0D9KLlzQk3OkANfW/glHguuuLnFnmTOgU1f
ys8EgKtDaz4U23JgySRhfgNwlz9/+HpvDszrtmtPF9QnYfsgusATDnzi3o2d
TLDISRPtnmwOTNcOV5lhn1+2Uu7vCjjw22ZBffb5tMGqrN6vlAPjaq/JLPCe
Q3Mxgw0ceAd/cdMBsO7BTx+rfnDgUPTSh/2+bqgTO5P6lwMvO/c4rQJbaW+z
thnkwEGl+Ud74D7gpu4uUUMhY1PLtxw3wV4q2oZZfGR8MVSm+iLYfzP9cogQ
GbPK7UROg6+vf/pXS4yMu/QPHtAE31C4xBCTJuOBlL9q68FRsgZ7phXI2IJ/
w5tV4ESJ/pQ8FTJ24ct5Mg73o9Q1rxoiNMg4La12dSc4a3Uol6MWGZsd8deo
B79gKJyROkjGSmSdpOfgEtrk/QUjMv67ZDSeDq4QqKxqOUzGkiLF1HhwNdfJ
DXdOQPzpfvlXwXXkrUedz5DxN6mKfT7gluXlCD1nMv6YsanYFdy2UFMi70HG
LSxP/jPgrtmHQxw+ZMzPvbzZFtw/5STZFkDGt34vilmCWeO7jF5fI+OHTilv
TcBTLP7AmHAyPpkhvYJ9X1wYas13v03GK0OyuHXA5IGMdsMYMu6fc72xh33/
7PVmbkwgY/pCSqwWmNZ9YC9PMhmXBlyU3AUW7ljp2ZlOxnIX1zI0wCJ/ulLL
c2H+f38+pQ6W/FXYGF8I7aXk8KmC5VqDuC++IuN8YmqSfX/d0GSy3bycjBcU
f4ptBsfeKlxmvidj4foEr01gbr2VVd8/k7FJ0DHWRnDHmxZLoyYyjv95h74e
bHxhpzTtFxkf9utOXMe+3yon9H1tJ+M7AuNiCmCl3sWCiB4ylr+e6ScHfvDY
1vfgEBl3904XsO/T3Eff7uEbJ+OsjdXPpMCeK2QFqmbI2OCgiLsku7/qa/Uh
S2ScgKo6xdj9Xf8Xv5+Tgr25v86LsPvDuqc5+Sn46QPm05Xs/uYyld4JUbD4
RPgwAxxXKDB5ZSUFR9PlCqjs+XR2LsViFDzc97WPF+ylUBu8LEXBJD/PGxT2
ev7ZYlimQMHJZXyRiwrwPvEgatUlJQrOyPP7MwUmTCfadqlQcL/uK+8RsLKg
RfrcdgrWCi7Q6wEnvH/p+mo3Bfvamum1gfkvi2pc3Avx1kWeawB7a/iRtutR
MG+r0eNP4K7RX1WThhTM5RLaXsruL1vrTpE5Be+/obC2gN3f6SQrD2sKfqgs
apjC7k+SLKNiR8HdRkYno9n9NZ/qZ9lT8ET/S6Nr7P7uvH+W9x88P6fN7wH+
Rwnbu8mbgqVOeb0wAJuX9gsM+lNwesHSre3gCi+DhqwgCpazO80tDU7sE7JX
vEnBR6quPhiRH0WCKec39dyl4FJvscQGsO+x+sm0BxTs4W4gVAw+XBsTIptG
wYrq23h8wRWhM4YdWRTcOPb1giV4yx7r1Y/zKVipp1hKnd3ec4kMyRIK3mpr
MN8rB+25XHb7/ZaCb7R8ZxLg3nXtGgkfKXjAw3HbPXBlXOon0XoKFlq4dn4H
WMWcO6qlhYID23rdeMFJVEfr+20UbFwjatAoC/UmcOPAin4KtnubaO8I7t8R
WVg/Ap+//hahDLYcH/aLmqTgEbdbNmMycF46PBOkc3BiprHNrDs4ee2Kxhpu
TvyGerFpM5jeeuFhpCAn7kf3vPqlR9Gg/g5lARFOrPHOa4MVOGUrYcS9mROj
W2oRElKj6PZ/Qtna6px4ciDQp2LtKApIO859aRcnLh1f3mAPthZdLBnX4cSk
rnlqqiS0z7FzQ7sdJy44VWTMJwHPfyvkLInixBzv3PIuicL7HT/FbjqWE5/j
aNnCBbbaZ/pG5REnbnLkM4oQgfiLWeczsznxtqgtsXdXw/vKo01/Yio5ccB/
Vj/urYTxuqa/Oj/Fid3EjnM6M0bRgcypFbkLnDhvjeWzLvooUu3c79ZL5sJd
RGHTUTDtSJeCrRAXzm2fLNYVGkXvtaSjDRS5sPQdFztJKsw/Ld5lnTUX/hPu
K/2edxRRc2/K/i7lwnfKGhOPkOD9UPudyNN3XLg5yvJa2zILJTVOUy9/4sJf
ne2W7MFqS3YzUo1cOOfzy5deSyx0zEi1+vQgF46Ru3Ph0QIL5Yw2ew2u4cbZ
foY1QrMsNBUs6FQqxY25xio6k2ZYCK/RPnFTgRtnvU7MUQE37MnS36LCjYnG
fXaW0yw0f9dfylOPG1/cfiQ4Z5KFDm6T/jzvzY0ffJnw8hljoejPh8u/XuLG
LQ8vZ60Ctx0PL3p4lRsvUc3zi0ZZyP36eCK6xY1Z1lE7x1ks9KDlvcfVJ9z4
VbbbZd8RFur1PSch0MiNvfVX+BUOstD18kK3NSo8eMfwXpPWHhYybmicOaPB
g4/3rpSKBK/pmw58rsWDdbNV8rXBT5mad4z1efAQWbot5x/Eb19ZEHKaBytq
JU2GdbOQjGDj2FgMD3blS9lh1slCg1LTvvghD/a4w1MpCH6uLkq5mcKDTQne
7R86WEjX1kZ4fT4Plgh/nqQBdn3WrWr7iQdHMUN51rSzf9+d8vwyz4OZ4hF6
79pYKMRZZFGEzIs1hJM4L4CNg3YGO/DyYv1bKbXy4M7sgHscK3lxaeRB22u/
WYh/mfvFdmVe7Nbb06f6C+IVXq8VrMaLk/Rx5q+fLPRQUf9D3U5e/F5mi+A1
8BbTW03OOrzYPzUrpOYHCx1JWz2dYseLt+78UWfcykJSr3dcHnXgxa+vlKoO
tbBQf81RHuTMi/cotX+5Dg6YebT6hw8v/i1d9t/LZhZK1VfUoN/lxSn2miNL
jSw0Nqrh4/+eF49rrtymVMf+vXkoNucLL1Y9eTIz+zsLWUQnF//6DuN5oGO3
Hvxqm+CMZhsvVrlV92rtNxYK9PvjtTjFi3e3FpFnq1mIxhXiGaDIh8+2L0jb
f2KhDSL1roERfHgiboOeTTkLndJydrhmwo83Hq0Ljs2E/s/ySB08wo8VbZ+W
TmRAe/cetwrZ8ONHpIKVJuCEwUaDeEd+fKPfWIU/HeYrTkv12WV+rEES8AhI
ZaF900Kkv7n82ONE9+vzjyD+/GcPdvELYAc38YzYeyz07KeBGQddAKdvjv24
FA37nadH8ONKAfyOdN7RHnzsuFigqbQAXpNut1PtLuxnwWsOZzUE8IosHc+W
2yzEefaw6n0HAdz2sqB39w0W6pKe+TpWIYDROznlqKsQf/VlUfVPAvjI+whL
Cpjky+PgXSuAC9vU7l4IYiGxulXL8z8FcMK4oYHNFRYyDVLfyjUpgGcGc013
XmYhosP93up1gviD2fkWZT8Wqrk51261SRAPSmzQLvRloV87g5QTVAVxj9tG
7h3g6ag7H6WwIK48xFes68NCynvzZ9dbCeLf63djH2+Yr5QhG80IQezy+A+/
rCcLZRldyAq4I4jfGJi4l3uwUPH8whRxXxC7jTGCbMD1ZoK396cK4gufruQm
usP+5NxYYVgqiHMHFV6pn2chkfxntDvvBPF0gVjvHzcWUji282j9J0HskXWy
OwKsXaQ3caRJEB//3mvT58pCF087KpwYEcQ1u9u/vHaB/KCz3FMmBfGxTvcx
D3B0iXd597wg7pywom4G5624bnmOl4r3zqxXzXaG/CJoaTk0KjYovqvjBP7s
FDM6vIKKiwLNT20G/6tMC/eQpmLKx1/v3jix0ITbpubn66hYTFieGQwmSzyX
ndlExYwrOb7GYMkLlSX+O6lY6Ov21KH/WEhJ2oCvHFPx6pDsM+XgndX1hzl0
qPi/igb9u+DD8p3DwWZUXL5W0E8bTGw0brSxouJ7qoc0JMEbVErfqNtSsYrW
2YaFczAejQ3JVHsq3h1kafwbvKR1P7T7HBXb7BHOLQc77ud0LXWj4h1v7wyk
gOv0zx++50XFPtpfBcPBmqZtu5z9qbiC6w3DHfzEUl9mfxAVlxlbzB8F022L
eSVCqVjYPuazDtjXXn5kIpKKzwR7BKqDu/6Lavx6l4pPT3RLyIMN3ZffpD6g
4ryJ7pRV4OKLTsn+j6h4uOo/YX6wzOXWUPM0Kv5S6Oq8fJaFbgQfcFXKpuKh
6b5nU+CpiMLDnAVUPNtc1zUCtouS0vz1gopjYmQ4B8CfYyNlikqo2NnrO6MX
rPZojvdGBRUrvG6m9YAT086MnKqiYvvUTQts8+Y0NO6qoeJG7y8/+sHuz7RL
hBuoeI13Zja7/V/FT5MHWqn4d1e5K7v/A+ViYe/+UHElhUeRHV/++1DX+G4q
9l7l3cgH8a/5OnnYY4CKH9ry+rDHd63upKb+KBW3SRcKs8c/3FIrIztNxX8f
uT5hz4/lH02++QUq1hXfpqILrujOHKkj03BF69LLY2ClwVVNWbw0PLamQsMD
HDN2tSSIRsNXZC4+jwCTZlnJ1itoeKWq6OYn4HPLNmEqa2jY/NbDJxVgLUEN
iw55GvZS33qXA/ZHBjNN8/VGGk7j3MovB2aKMmWjttKw5IbJIF3wP/nBEe3d
NBwWlH3pPthYyapJdC8NV+28yQEXZfRa5UPJqC4ND5mtihgG30RJYY/NaTi4
cPrZIdjP26zMZTmcaHi7u8J5OciHJNu3fK3naXjY7+huWzC/gzIr35uG381P
r0oAt7nzltpdpeGzjrpTYux8vFFiQcTRcC9yCVSDfGVFrd8dm0TDf/dx118G
Wz+IkXV7QsOqjR93VoOVn7ix1j6j4UvJGYdcIN+byuXCL3+iYQueisUqqA8Z
QXK8O2uhvdS7j2WgfvjulwuZaKDh6mMKC5fAkl9kg87+peF/MjtidkC9OdMk
42s2TcN9u14nV0B9mhmUOrdOXggX7z62h3aRhUTXSBysDRTCJ07nvBdn/979
S7wqLEQIe/xeuHsTXPZI/MC+G0L4ffZxSVIgC52UF9/z6r4QDjQiKXaAs7aI
7Ux5KoQH/50wS4L6u1NHdIP3LyFMH6vdPB3MQoL8ohlbO4QwV4KMmU0IzM9X
EYXBHiGcV6ysXgG+aioic2JcCF82kZi6fh3W66lApDwXHT9Rm8vjCGMho9sC
X8m8dFyfXkY9Bi4+LyDwl5+O3RNuZxeBw9UEwuLodHycweNoFw7z95o/WEic
jq/adCkmRbBQ89Er1I1r6fjdjVzeUXDg4vS9AzJ0HMRlcgjB+VKHu59cUqTj
16JCig1gv46jmx9spOP4ayp1ayLhfLtW97JImY6HT4fx2IK9PpZXDajRcYVc
566/4LVnt5nwaNBxdv2wocRNFqriz22V2UXHLTFopSV4jWFcv5U2xD/ztvMD
+N0I3ePCPjrmO7OwPAd2unN9/rYOHZuFRk4r3WKh0gZPwapDdEy6+j4pHOzg
NRDdaUzHHzdecHgBpomclFg2o2NvhcjNf8F2R42Ut1nD+PN5JjbB+cm3+P6F
iQ0dL9M8KKbgZ4mayNmOji2OW2p5ss/XjvXGqQ50zOmSfLwQnHs1qaX8LB0T
i0KW38AW8qtP/HSiYx4JvrQB8PKHyL4pVzq+oRplxHUH9p8jpzvTg465MvNO
SIBN+P3mNnnRsWy3fbcqeC57NEjPh44TjV516YINRtruBl6mYy9DvQAX8OTt
w+IJQXS869lNpcvgRJWvqS+D6XhzZ1DATbBOw55N9aF0TNHbEJAAZl149Xw4
go6d9cPUM8EPVm/R4r9Fx2tNU58Wgfe8evJBPoqOv1deHi8D91tLGGnfo2NV
ASlaFfjuwt3mY7F0vHgjjPcbWDOR3+5iPB13FBCDTeAudKX3biIdx7R/qvwF
jmyfdst7TMc1VzPj2sHbrrrMfk6l492k0xe7wX/kuq/8S6fjB2WLZ3rBoR+O
8pOz4fsKfh794K2OdVEST+n436O/qQPgH3x6YjsK6Fg7SoV7EHw1uzzFvIiO
re0vPGZ/rnRom5LbSzruDMwNZH+/cTinKOI1Hd81+JPLbj/gtuzu9FI6ltwi
pPoPvE4l7n0FQccad7XXdIK/1dMN297RcfRvX+c/YJ8L15tmP9Bxn1f5tp9g
mdVLx1d+puPeD8KB7PF+Kfbs2VJNx3rq/mbfwZ7WA64G3+i4bP3i6y/gDw9b
Aq820fGLvdYu5WBXZMT3qJWOH2ugmmKwSPv7O69/0bGnqWF/AfisXGHyaAcd
a55aCEgBYw/xmeZuOpb6sTGcvX4iFcGHynrp+KT6Pvd77PZtLWfCh2H9+E7V
h7Dji188JDdHx5Hb3uafAc/2OaTwL9Lx0fZHvrbs8Wl8m2Etw/oa16w8wp6P
puSUUi4G/jF06PV+9vwydGctGAxssxXflQIX2BUY7l7BwE5MrvJV7PXJW5Mq
u5qBnWMD8wXZ63loyJAlDp9TatumYX9HhUalhikysK3DVvwFfLZ5ftZ1IwNz
BgqfLwdjBXsjC2UG7pEUPsbOl+F32+dk1Bg47FiidRz44PIvoxLEwNq9Bt9P
g6UND6Ql72HgBs2rWRbgmYS8udD9DDw8tVtFF/xkZ1DaYX0GbhPw1NkAJnut
mx+2YOAXnw7a9UM+t1beNm60YuCIo4LBreB84bm0N8cYWFX1lUEV+HjBV+PQ
kwwsKcdbngp+M3j+ibQLA7tKdHJbgaN2/ZznOQ/tDzus2Q8+F77PZNiDgR3/
ab7fAhZRXL3w2oeBF14yf3KDPU+VmJgHM7DEVHVbLtQjpR/ciyEJDHze4R3H
P6hvimtr0989YuBNPyezP4LlT983JaUwsNKOBy8ywJLD6zJ8MiF+9S1djmA6
Wc/M6QUDp4aImP6Feiqow1jKeAXPkwx634D5brRmdJcwsIUL43wMmLzq3NLx
d7Ae1n50XfDE+ohMk2/Qf83AlXio1ywXM/Ob9Qw8oleb7gQeKhRb/tzEwCUS
95U0wf9255jv+83Aa0iLvE1Q/zuCPJcD/zJwbHreriTwn4+aWaWdDLyr1fWq
I7jFpHp5Wz8DfxHcwzsO50dDzL0sjyGIN91R6jn4+0+bw/ksBvZeek+5AP5s
P5y1fpqB+xiGHUOhUJ99hCzEOZm4Walo9i2cV6/LmklWPEzswlng4AZ+QUnK
vsfPxLnz2wTEwfmRWziEGEy84MtTcA7Ou5y6mWz9FUw8He8QSQVnrn5rEbqa
id1pF4/kwnmZ/Ngkh0OSCefRz3Od16A+/hM9oiXNxBf0tW/5gOM3dnD4yTHx
NdLVI4Lg6OfuRyY2MPFFhYqwdXAfCvl0l9yznQn1ychNBe4/QbRjubK7mPjn
mWdPs+G8vmwmZ2mnxcRrZ/YsSoEv/i7Kbd0H7S2vurIcAPtltNHyqwkT3+fO
lgz3h/NnWyKF7zATf9j3sLUd7kun/Bye7rdk4pRqIYY6+BjXNKX8OBOj0cTs
argfWR4sfzp/gon75L71McGHb1230rBnYtHGLGszeN8wbTDivODIxNqGrwZu
wv3J8P//z4B//goOf+/FQv8Deqg3vw==
          "]]},
        Annotation[#, "Charting`Private`Tag$368842#4"]& ], 
       TagBox[
        {RGBColor[0.957885, 0.809857, 0.369177], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl23c81d//AHDXute+9yI7e49KSMg5KpSkzFDRIsrKzPhIioaShJYiM0JG
CSk3RCoNUUlZGRlx7Z3v6/37/dXj+Xjfe8brjNc59y3ZI742bqwsLCyX2VhY
iH93i4k+LjlJZ6TKF0z5sTCRz8UarWYPOmNeLeaJNzhhzr3ojxudwX7U7voJ
cGvb00LpQ3SGiof3vWPg2e0HNQ0P0hmVemzvD4NFnrAXOjjTGcP6ysKuYOdE
24KrdnTGuo6SGSdwBGlJPc+azqiKOHZlH/ieX8ajeis6o91ui5E9uNtqIn9p
B53x/tFC/14w68tbaiJmdMYaDdUuK7C8Js7X3kZnDPWvYVqC3Xmu5XluoTME
uV7v2wm+GKanGmNAZwwEfC40B+cN/XqYvonOWC+hI24GfusYo1KtQ2c8Xk1M
3Q4ebdR4+G0DnSEjl6SzDcy/qVV5SovOQOd+9ZiA1+WE5/Jr0Blv5IWzMNj/
/NscUyU6g6I06GYMTpo6pXRYns4wuNR8bAv46RGxnAgZOqNRyyDECPz1M0Px
lhSdcVLkS6oheB57ZJeJ0xn924zbDMDixQKKH0XojPEnsjKEDaWfZQ0L0Rlm
J+X/2ww+EO+iwEmnM3KOD43ogyNXOLJkBeiM5nwxL8LpXoXyW3jpjGBd55VN
4FcddpmOXHTGQYp1GuFei2W5QE46AytkWRNmr8rMuMZGZ3y/tCBIWEl1l9wj
FojX5rl+PbD5rckHDSs0hoLutkbCHuQ7sr2LNMbuiHPPCF8ONnmwMkdjyFBd
ygkX9P+REZuhMfZNnK4j3GyXkK4zSWMUy4R1Eh6r2ySzd5zG+HOfTCbqo27s
Sjs5SmM892o0IqydESt9YYjG6LvseoawLU0rLWOAxpBeDPpAODCqbe3L3zSG
6vNiVaK/KeMR99u7aQzGh6cJhCtcFNbO/KIx0nTV2Yh4tTe/u0ftoDHOMcuj
CC8aBUhpfKcxlFhWKUR8JQvE75m30Rg73PLuEjaWqJU82kJjZMkc0CfGx/Wy
Z2rkRxpjVvtFJ+EMj4q7T5toDG9XOXNifOu/uUp8bqAxuMP9KcT495uR747W
0RjxTEoLYRVFhzvyL2mMraPpEcR8edwzdet6KY3Ra5CtSMy3hASFjz6PaQwX
r+s6psR8QvYclgUQT6PuncT81LtXfoozh8bYTP0ZswNc7RhqEX6bxtguT92y
m5i/H/8tHYuiMbYZkHOJ9VMQuU576380xqLBLA+xvq5qHvKQDqMxHh7WDHYG
74171doeQGN8vBvqfBD8zex8odVxGuOtdPGRo+C+F1yu+lY0BrZ440+s/wYv
g2ThXTQGL71Twx+cK3Hy3aQ5jXF2xHo0AHwi9P2mQhMaw8bKKTwEPKFzjSqn
S2Owr+f7EQn+90iolkeSxjhtbnQ3Hix2R1qxa4jKWO2z0isFv797MH5igMq4
3NUY9AQcde/uHFsflSGxLFRVDv6TLvJWpZPKiM/Tsn4OLs8V8PVvoTJquHZW
1oNtnq5WcDynMkJ+S/t9J+bjpy5LjStURjPveT82Eoxni1S58SUqxL9yByd4
4st+aetY+Lx7piIX2PHbt4mgKCpDtezKX36wUufHlJpAKmPQ7fZTcXDtSE23
zUEqY2YyXXEjeIkzPTBUi8rofJ7y33FwWL5Q4h11KiNZvP37CfDi7kuPn6tQ
GbFL/+n7gOeT/IdX5KgMOf4R9iDwrJzpoWgRKuPqsk5LNHjSeHhXHAuV8WJ9
6pY0cOtfDzODbAHG68tOezvAX3RszkakCTD28PfqdoFbwg2rX94WYJw69kj6
N/gTF7/2tngBRpTN8uow+L1imZRliABDszp0ahFcf3Bl+uBOAcam+dksCVYm
Kmu+nnn2Lz/DLjdV7RBYO+nqLvNBfkaQ0p7ZY+BS50tTvD38jPS1HQ2e4OLB
qG23WvkZa8XDggPABSS/30XP+Rl694sELoBzdK3kf17iZzh11qs8Bt+5x52p
p8TP+OJsPMrKBuPpfS5jxIWPQVNW8q4AZ7bfLpZw4mNMacb/ewFuMC1+ucuW
j+H3uO9GHZh37a8fj8z5GM11jm8/gG990BP0Ws/H+Jtq7N4Pfrxu+NwoiQ/y
Da+TIDsTdU7sdfubxcv4IMkj7w/eErxWZXyYh9H0+QSPIQcTcbk6TTbv42aM
qilSZchM9FGz/xvnewpj9OT4p81cTBTjJr693ZnMyC/prT3Mw0QW/41Px77l
YJy3pooO8zERyz9vjQ927Iw1/265+1IhHse2nPEdYGUYi2cMLdKZyPdRwZpR
RxLjgZrDqS/CTGRUftmT/f1qzb1rcR0PRJmosm1JazB3uUZn9/XFdgkmUnvF
rx6ZuFCTyfV2SEka8l9koM6O0tkatZ7TX63lIP8siTW+uTFVU+uqEPZJEcrb
RT8ekc+sicxKTBBVZSKHp0kyzRwjNcUWM+IZGkwk5bWjm6u1r+ZZ/c5lnvVM
tPPqtiAnsc6aNfJFpxQ2wvzYOmMVev1zzZN2jeoDekx0ZPVNSHLos5pEh96m
zZuZSGu3Um/w8XLkZadGNjCC9SBufOqq1jPkHXg81xx8btCeJWvmGbp9KNPU
Hvz9bMzaz+cqkT23U5gf8by8z1k9vRo9uxdTkQMevfZ5yNfrFbqRslGJvoWJ
ti5cO6KQ3Yg2Hztc2QP+1iWR/5jyBpk2qZiMgb0acicMvN6gx4cXKxbBN2/U
RFlvbEIrlU4hgsZQnub4/chXb9EN9R9a28E3j1h1fP/VjP7T77yRAZ5148w3
42lB/dcE4m0RE8lpzElWbm5Bbpx2xw+C90wOXlP3aEGqDf9tPA5+GNkURH3d
gqJ487PCwPtvXjH5EfkFnZQ9P5IOZryht3tPtqJDrRuERsBx6tKU5PZvaHM6
v1gwhvwyIRBOpnxHeYIfjkSC+56xjIXqfUdHVarSY8HG23u/uNz4jiplTBZS
wMwD2Wkqu9vR30qVtc/ADvHqm6oZP1DJrDWeActMbHL/nfsLUTpyNT1NmGjX
8yQ/gx+/kPFpsSw/cHDMRNh13k7EiFThPw1+J/boGjrViby6bF7EEs+3rq28
a9CFFpNNL2WCB3aycua7d6N0XsrvH+DlovVxbWe60UHKyds9YJqQK5V0uxsl
vjfc/gds1Plc3PFdN9rU4BwyA77uH7SOc30P+qewZCewFZ7f/eN4ZKEHSbxW
W8BgGxaRzqv0XuRCj1k2Ax93Mz1aqd6Ldl+QmrEEJ67L8Ka69KLpVaMGR/Bg
3f7ol7W9SNBwQ7cveFnlMnm4oxeFn5M+HwSmx1dcEZ7pRQmMWyLhRH2Owje9
lH+jwMR+cixR3uiHR+JXfqPVP4t/7oAfWq+sN8v+jR6r2falgV+Uq5efevkb
+drl1WeB/0RdZLxh/kZf2inrisAr/eWm01x9yGrSp7yUqG9X/1tp+T501euK
1DPwFuGtbcH2fYiDJTemhuhfmJ9zhk8fEvnKcr4O7NF1v6v5Qh+6e+HdgUai
PXlLQwpVfahs1uvWB6I9/Gq+e7/0obWn0uc/E+0JcJwOH+1Dj/E/zTaiPVue
/mtZ24+mHSfpHeD7SVq9Fzf1o6W7n8t+ge1Gcl8b7+1HrBsdlbrB3Ftl86Y9
+pFVlplnL7jm1p0r+Wf7kXLwwfA+cOC4oN+hO/2oRevg/gGwmtlV2zVl/SjZ
jpPyB9ydyrnp/bt+VOktFjUETpk6Ix7d14+iWfbVDoMtLRZWNq30I/0bZ5pH
wKwP/Hv+Cg8guQLb9FFwxdxIfabWADr/+cbmv2BvK7eHTuYDKOcSyy3Cctmd
cQKHBtBHZ+cqwt+X9vm+Pj2ATN8dTiMcb/PZJvz6ANpz+Jsp4e15Fnob8gfQ
xszwAqL8xdU6scHaAaQnItBC1F/ssGUltWMAPdhm85Ron3thebfN9AB6XsRh
T7Rfgn19PYVvEDV2Dj0eBH9yzst9qTiI+J1r6vvBsSVycYHGg6gtxyzxNzF/
KKk+avsGkdsuLNIDnnQRtun2HUSsH7xsOonxehqvm3JxEE0/ubKVGA8XXoqY
5YNBdCb20MA3sNDRs8ukqkH0981Do1ZwU+Vi17OWQXSOVWn7J3AkNbDOe2QQ
Xay8tfQOrHP8b448+x+EA18dJuZHulC39zXdP2iYb5PuC7DDSSdrU6s/yHOB
PZ2Yb7y1LTpL7n9QOSnuSQk4xPf1kvutP6g/+k0bMX81Goy7JEvg+18Ce+6B
eyUralua/qB6y9cpKWCrt/mXjJf+oBrpFvIFMLusgve04BB6o2X1JhJcFXJv
b77GEAr++NcwGKyomCCyxmUIxa0TMTtGrL8zQdl/GUPIbE+8yhZw6dexi5nt
Q0jkU0a9NjHfNT28nCaHkGZ5u5IK+MsP542v5YcRU0LLnA7O18WvUmOH0WXt
v5v7YL/YN8L9a5flCDpfkrkUBY58JKbieHQEPbwaOxMIzjqpEnAsDHbS00u/
PMCTI6Zc/z0cQe989kbvBV8ZjdItYh9Fi4G3raTBtX9nr1JfjKKQNqPsatgf
hwo52iVbR1H+cqBvMZjqI6SgOjKKUhbp5lngg2MbqkzE/qIIL12lK+D5Ma8B
/6C/qO01548DYC1mr3Gb5hga0/drZAPbF09c6tk+hu4qGOxZgP09wo+l7e/+
MZRStIVtHNzElDrJeXkMuV3LmfsBPjbheHPTwBgyPmKx/SmRD0qO925bGUPs
QlsOFIBLTwVr7hUaR/x3tuRlglcnbtR5bB1HEcm9PYngO5Mfxm/fH0e5J4Xf
BoBflf4yyHk6jgJ6PsZ6gf/4j8aUvh9HGdSrIW5g3SkuyXeL46iM7/L0PnCR
05WyEQqcc4QuRFkT368UbD8lxEQL5iS8i/h+qJxCpDrsS1mDjgi83J63k30T
5DUyrXQzWMBgg+9lGLcHFG1jHbDeIqpKcWIi5NQ2pgre6dzYJenGRF09QoKK
4ANVVhyZfkx0LbzBUwZ8Luzg3scX4Nxnt1goAk7pqLmrlQR52S7AVJDIp0Zy
g4XpcM4/nCYiAH5+77y2ZiETTQ/YKvCAP/wb+K+gkol+WbmfJIN7XHc2qTdA
nNkLRtnA04xHQo9awAGLuSxg8XN+j/JG4NygSn6/CPlds69lVmWeiX6a+unM
g7Gp7taH7BOosXHT1xmwbc7Nq8q0CSQqvrFkCuxOXvyeIzWBOnI3vZ4Ah3oc
UFBSm0CyP8XpTPCVppe+2XoTaEG29OYYOE1N9rnCtgkU3Ndi/xdcGneOM2vP
BMqOt7EcBb8e7beWPzCBbsVxho+Av+/ecS/DYwK5mNX3DINHivL/yAZNILLa
4SjC/wT4dB6cnUBZD0odCNNO+Z6RiZ9A20TjjxFWaPn8Nu3OBJqef5NHWG+j
zhrp3An0rkhfiSh/Z1LK4ftlE6g1q7Sd8IGZ+QIpxgSSMeOtJ9rj47B/PvX9
BKpZEe8n2nv22Yttku0T6JXeE6NxcJKozLW7/RNo04HCt0R/c0Ojf4hPTiCt
9o74SXDVjz7FO/8mUJWo8KVpcLOh+Skxnkn0J0arctaYyB951bdEJtG7uJW1
C+CpFR6KqMIk8kneV7UE5nT1sb25fhIN8tHj/oHFGJ/ur9kyiUwOsV4nwfhp
yG4cTt45ia7NrbxjB6PoZF1hh0nUZfzDkAK2+T0XlXRkEm174NVNzI+Q7GqR
G+GTaMZ+sIGYT5c5pY/SL06irTuXyaLg1ONni64nTaLVfoMISXCtqplpQuEk
UgpeXiLmK3/RR/+rXZOo0JN9pyFYVkD7Je/oJGKR/SFoAtbxS+K6Mj+JwvU8
+MzBztpO6ZdpU8jsa+Bl4ryYXd7bfGHbFCo6XJfqA64QMRUj751Cr6M/NgeB
357OPRZ7YApVl8up/gdmGngtnQ+aQjklbgeugI1qZlSic6fQyMnP2cR+QGmT
e6hRNoWmgv0uPgF/Gd6j/O3lFNo4IHClGnxiTb6ixtcpFH7k7PR78E1vF7mv
7NOIf/jiFmL/mZRolFA7Mo1cpxctNsN+9fD0Lf4WyRnUMMZU7QYHxr++GqEy
g65ZXrMcAaOsSV5lnRmUfLPy7Cz460dLnohdMyjE/bcsH+ynbMokilLYDApb
7dcwBLu0eZLCvs0ghd2/Je6AhbUNp2UTZ1HjZEzvYSIfM65mXL83iyQXbaN8
iPPCnu69pLxZVL1ZRoU4n533iinsrplFkU0zSUlEfs356J72dxZJsLh3Evnv
g8Sxdsmdc4gS0MO5fhsTXeC4+lKEZR7drgw9wrEdzg9JXV4XeOaR6Lx+Hx38
Uk5bYm7NPMp4xHVCBjyLvoV81ZxHge2yZw3Bx8JkNyTvn0faiv++nQLj8aeZ
9GfzyHBpw1wneOF750U+nwVkrFAT+cQU5r8H78HgsAVUYpO/vxa8fn7zhq7Y
BdT4QEriE9hdJLm9OG0B5TkMGoyAW+x3qdl9XkCneOkfpc3gvNN/+l/1rwW0
d8PO6xpgSlBOi+LwAnLsvqeyGWycRAqfY11EN68Pf7QG57c8e3dHZxFJaUu2
RIFNj/SnsZksIt/bFvxXwN0T9ECv3YvIfVqdfhO8huYjaey+iMgGNicKwCXp
d5k5/ouIdsboeTnYcn1TvcCZRXTWS6GZAT63R8G75+YispvZpNkKXttlbWKR
tYjERiinf4GrfM4IlxUvIjZjuf8GwMyrP16cb1pEXMWnH8+B46QoiX/bFtEF
1f3tq2ClQl13h95FNPrkUznZHPaX9wn8KkuLSKW8JmYNeG7/y94E8hI6FNsZ
IAVOHBkpXxBcQsZSHfwKYM1wsbgjMktoRplirwZ+w23u+k5jCT22rdi+Hnz0
TuBGnc1LKGu38U9d8D/VDPI90yW0UjsqZgjW3bny2MdlCWW38p3dDv70Xe38
txNLyO6dYu4OsJeHoyMOWUKqk8VelmDyfIxG3rklZD9L+rQHnHGhjIWesIS4
Yk5+tAFvEelpDUtdQgG7sKc9+HsOf97vh0tIsJt5dx84QM/oP8unS8jr8fPj
TmD+Bk/rp6+W0H9SFh+cwXn2NxXXflhCuvZ7Pu8Hb++vX4j9sYTOn430PwDu
CpxsHh9YQvuaL5cRDmOXyXCcWkJpR5VTCAsn7Q5+tbqELH3JkoSL5cMt1HiX
kYVEpxlR3q6yh2tviC6jK4kuokR9A1u/Ti4pLKN/q4aJjuCzLWyNxzYso8R4
1XIHsOSRDXebtywjXc8fMXbgZxMuvnoWy+hbFYmN6K/N2Svb0hyW0fEim3VE
PP5Sq0QoR5fRV58oXiJeF9MHR/x8lxFV2TiViGdNzdakrReXUa6a3g8MprMb
pn69sYyMtf58MwK779iYdSJtGdmOst7SJ+LzWf5JYvky4jo8f2wd+IiwZLVS
7TLSXk4OJMb7qZNQfVXzMhoSl7NUJOZPL3trb98yEiuIcxQn+q+00hHMXEai
bBoJQmC2kzO/uZeXUUUOTuYH50/1T2kLrqA/qZZ8rOB59kbBcyYrKKb+Zgcx
fy131kiI7F5By6vR2V3gtKvP5B85riBd8THz72CzNQ83fvFdQatlTRJN4GTl
S7by91fQsWVjpTywtsWuG3WLK0jjp9vSUXBs/La7+zj/IcaN5UlncHuLYeYI
7R9ytFJrJ9Zv1H6NMkHVf6gw+VMwAn/04vtydN8/5DDKlBIHe137SGd/8g+J
P6nf+wH2i+xW28Tt3qvoaAizRB88L6bM+By6ina+3PFSC2zpuvjXJXYV/bzQ
9VkBPDmUvjM0bRX53MgVoIGNV/+yFH1eRcrSVSNDsH+NCNU/45FgwWvTCx3u
gZOeFVrZyLJgJWP+iRtgY+eb/beUWXCUjGrKZXBi2glBJR0WfCvDi3QarK9G
88W7WfDmdduO2ILPIxeloDMs2IM09R8vWKvX/MXzGBZMoYl2soG/nd9gx3qF
BWcqBVguwf6s9pY9+totFrzRLt9uGPzJ7tGvvBIWfG+XrlgTWOrEfFLnbxas
cS068xK4gbdXXXGYBVfg06RosN/jd7UnmSy4wei0fxi4fvo+c36ZBfOVst44
CT5xxtRScA0Jf+/WnrYCC8mt++0kScKrul7UHeAX9aJh6XIkPE29YGECpnKP
5mquI2HmzHspHXB5UiLbjh0kXPHusrsEuPr6YR0FKxL+xbs4LwyujV/vxmJH
wlEzX4uo4OaLHxoqXEm46/y2S5zglph7c0luJOwjQCkmgb9He6mcOknCMlxZ
/5YhX/VFcF9WDSHheNp7kWnwcGh7Fcd/JCzNfrVvHMwMfjjSE03CoZrXfhH3
1WU/s9134klYbZThSNzHWX2EI4OTSNjeTfEXcX+nnOwrsrkD7f+pk0jc7wXd
oqk8OSQscu1lInG/FD1ibTL4iIRDCr27ifvlWlcZ/7oSEh65vuFoC1jhwHhG
2jMSdilSkCTum2pOL7+EvyDhqsDDvMTvDesdrrI71pHwgAOr7nuwnu0BXZ0m
Ev7QIHvzLXH/3avuTv1Iwvv1fmxsAm/dvZgy2krCgSJmvG/AOyyaGt/8IGHy
zzOyRL62Mr81n9VNwsszDwIbiN8jth9XPTtAwobfGjgJO5noOR8cJeHHE5T2
18R92ZgjbvMkCeNn0aOEjxm2PheeJ+Eft622Ep8/oZ85OrFCwsd4LnQQ9tP1
l/rAxorf/mdWSdQXrG1ilc/FiqeP5P4k2hOxjnomVoAVv9eoNyPaH63R9fiI
MCs23P1snrhfX1At6jaWYMUaenenmsFXlP6jSciy4gtOl/WJ+CTKW26dU2LF
eqppb4j43ZKRCPiiwYoVRKaziN9f7ksNZz7WZsX6yZkfvoOzxCtb4/RZsYvw
G7OfxH1W5CKHhzErjuSK4CfGr1hon9727az43O92JWJ8y2lKx2UsWLG98HIC
8ftKNf/MzeU9rLiTurKb+H2jlqf+zXd7VkzeMecyCW7mOKJ2/TAr7l1vcnYF
3MK6Yb/3cVbs2fA6iY2Yf6urcTu9oX/NeSzc4L6Fe39JoayY5j/ySwQ8POu1
tjOSFZ/p8N4pDWZOGe6pOs+KraUk2ZXBy3/bi/0TWDGOqXbeBGYdedhjlcKK
x7/HMxGY8ieErp7KiuUO7W4i1pdgr3Dg71yIz7E9m/YT6/2r9Sa7GlZMfZX3
mFi/t66VrdJfs+KfQR9broA5dwq/+fyWFUtverf2Jrj3+XfHPV9ZMYOrSrEA
fPuBa5jFX4iPeN79b0R93t4vsAQbPrvVp3wD7C/BSh9jVmXY8FHGY94t4L6u
9VYvldhw+szdgzvADJvpTkNtNvy7eOi3CzhEP5xl0054nhy/IQ48wHZpm2YI
Gw72S7Mgznd2L4Z5RiPYcKWb+cQguDbYsjU/mg0bvvA5NgG+PyTgphLPhp++
KM5ig/2VN/OU5uANNsy3zOHFCw478GUm+zYb3t+4Z1oIbP8xJVY+mw3fXadn
pAiuvThv1ZvPhocP881qEOfFrc4iD4rZ8MguKzcdorynUg/XVrPhqlPRjluJ
8nzO+P16xYYHtxZ/3QH+o9yjn9rIhiNnq/9ZgevvZDWJfWHDOev+YGewth1n
4vfvbDjJwsTeFZzO5+F8sxOe+4+Rj4H5G5vkHPrY8JVJXgcPcESU+ojQMBue
EKoy8gIPb75a9mWcDccqCFb6gh2nxsITZ9jwyg69N/7ghoK9262X2HCcU4pH
EFjHvZSXSmLHgtwsqSHgDGmhtg+c7Pj1XP2xUDC1PejeVV523FKj9zoMHJn4
zc2Szo5PrubUhINHd23W4hFlx7W2xx0iwM4cd2ebpNgxl3NTHOE3L5dfXpRn
x76P1x4hrHfa5YK5KjtWnajoIL6fuYGxh3MdOz5aPbRIlJ9wUuCRiS47LuK4
lEnUH5ntwvmfIdTPfnqQaJ9XV+HhChN2/HVPQRPRfmexleopc6g/QmJ3AHiH
raXoOit2nCb7PNAPrHv1bsAJO3Z8qjVqmzdYrnH4Q7YzO8bqR6o9if6RDNR6
DrFj4Wq7XjfwP4NLMZLH2fG0pFXFYaJ/gd+793mz4z+/t5kcBDf+Cb75IZQd
KywvhtiCn8g1THJFseOI0Fx1YjwzDghbmcayY/anSveJ8Y78VMZenQjtexnw
zohoPzfboblb7JijUuOKHthpu81z7TR2nNwUL7KeGI8K5qm8R+y4Kkbhjhx4
JE2zK6WeHf9o8X/AQYynb27lqVl2/JEzck8DzGezvFmhwmV2vL1yQOoleONv
U78/rBw4pNd64CmYf1+fkqsAB8YTHKeywa+NZZMsVTgwv+crxnlw6Wm/8Qta
HHivgXhpBDi9tMaiTocDx2nLPQ0ERyi5kAxMODAvU3j5GFib/66PsjMHJlM8
u83AMjuGm44c4sC/Q0VKEVFf9GbF++4ceKpWtlAfPDTzrUMogAO/15ZRVwd/
Xae8aW8oB86MWS1TANd7BifGneHAM/a8/muJ+n8J7WS9woHDWyqvE/e9eJFj
WVsSob3KNRPE+STcumz19C0OnFROiiWDHV5bl49nceAC7tvmK7C/8BXGy/96
wYHPKFwWHgE7mNSJFtVxYBYFj62D4PS2Ob4zTRxYyyUs5TdY59+heZk2Djx7
b3vJz23E/E7+O/GDA5tuOBvcDn6j9La3tpsD54svuX4FH9izsfnYKAdW4ClO
/QTO+X28VneSA4+k+Y41E/tvSOozznkOrJMTdPgd+Hw6R8ZDNk78RM7lYQP4
g47BzVAuTpyh9DqsHiza5HPFQoAThz8LP1kLLpj4Fjwqzomd7nZnvQTPxvB6
vZDhxMIRgqPVYCxucjheiROrcKRZPQdfLgpycNXgxF7/vX5XCW7dmr9rvTYn
fq7edKQCvPZbJybpc+Iph1H6M7DHSUG9li2ceNj0VMdT8NKNCJnAnZw47nJe
aRl4u0qJsOkeTjzg3VNTCo6v7udeY8+Jfdef7y0h8tFecZZBZ078T7RVjLBc
v9XMs0Oc2M9H0K0Y7BV6bviiOye+F3K+7jFxHuOr6HLy4sRHwj11CLNkjLaq
+XPiWwz2Z0VgCz3Zt0shnFg8/pYF4aS39jXv/+PEr9WOjxWCO10uP7l3Dsr/
VfqAsMrUyzyfS5x4YfTFUcL+F6buo2uceFP6242EqyVUkqjJnJhiLEEjzFl8
4FLPHU5sxje5SOSjvduvR5amc+Jmu+vM/8tP318HnMvhxIH7DScI93otetgV
cGJRD+1lwhqkdS6KpZz4xqsKKlFecPJR29lnnPhVEVWLMEP11o7GF5w4IjjC
ljD3y/dbbtVB/12Nowjb2ZA2ejZxYlLJrTLC9wd0VQw+cuJzJc2jhP+EnZDi
aePEy7nS6kT/tQXS6D9/cGLzjk/ehCMyv5ALuzkxTpR/Qpj63mjSahTmT075
DiKezodODUpPQnuuhycTzprO/smcg/hIjPQS1pcSaExkI2Nx1S8RxPhEl2yr
PspFxurV9Y2E35ueLtERIONGI3UBYjzX/CjI4RAmY6zcsYfwIZ+eu1/F4fmL
27GE81nXXM+VIePrWzWKCU+nWMSeViLjd3P7mggbq58J36lBxvnSvR8IX6gp
8xPXJuODy9deEN7b2jZ/XJ+MefSNrhIWH5qLempMxg2zKgaE+1bEuNhMyVhF
xoBBtK+IbnR97y4ybrlrK0H4tLKL2H1rMnaxdjIn+mdiFPVgZB8Zu6usw0R8
uK0zVDe7kHEcpZJExLfVrb4k9hg8b/9x4RER/7CBza0nyDgl+vSHPGI9XKPU
yp4i46cjQZ9zifhnqVn4hpDxkeXyK9nE+qiwbKn+j4z1U6WXM4j7SrOPM/d5
Mm4tvSGRTqyP3oTefZfJ+Ivy3EAq2HGu9ER2Ahl/6tV0vk2sD962yckUqP+d
xKlk8KjMXBi+R8a6TVnK18FPdcXY4jPJuL2uIJQ4T0VaGMZ15JHx3wyRoxfA
O1wPCqoWk7GAVVPXWTA98Mzd4HIy/lGQPRIO/nnxgXx9NRkP5yREB4F9S/s3
ujaRsTWPnMlxYvwbydUFH8m4c3vCIVfi/PdTdftiGxnLV6QuOoBTOHzsknvJ
eMewdPx2YrzFE372/iHjQ6ddzhiAVdeVHls/TsYZnW9/rCPWl+Ns4LslMhZu
qa4RBcd6i66IslLwGS1uE15ifKMNYtwpFBxDEpZchfPs70eRySRhCm7Lm/xA
vJ8sYKRL7ZGgYCerq/e/EOf7ttrsVFkKHiIHPSPen3KvcpZv0qLgXMfnTx6A
WwVVjWN0KJi3pifhGvieyq6GFgMKnF/7siOI+43Nta/e5hT88DX1hB14X7bI
XOYhCp7/Njq4YAL5qWrzmQl3Cg5eNyBCvM8e/rCfjLwp2CGkw7WReP80nyby
I5SCy4J3Kl8H7+CrTVOOomDPlUv3ifdRNLk+5aBYCp6mO0jtI95P7VLRp96g
4ITv+2TFwD6HLBgHb1OwXl5lxjyGeAd57XiURoHzEVL+Bn53v9jRrICCeaQc
dlwHT07oh0a8pmBWk5G9iwjub3V/bxW8o2DDDHv+L2CHpIyKn58pOLtOejof
XKnHO2/UScGbXHPMHMFR4V3BK7MUPJGx1SPPGPItR2xgpAoXVs3ry1TZAvnh
q0FSkRYXnFfIsTNGsD/mjpd16nDhCvSt8RW4bafTlLEJF27w333aEZwar+G/
6sSF5f0O/o00hPO+6BffqDguvF9os1bZZsh3QxeuFV/nwh16HXkh4Pgqo8fd
N7mwdUdQtSF44kDOGM7iwra1x5/U6jNRxYNQb9ILLmxeyrb3/SY4n6jLnIwe
48Ju7juNPusy0VFjb/fz1tw46mzLzsoNEA9PsozFPm58xvpsZDg4KvlBu8BB
bjx5Jz9vCzh1tM3yrgc33pXsM/RqPcyHO8YbS89w4zSOt/pv10G+mhNg6S7k
xtp1W453aEI8i0tvG3LzYHnFhFhuNTjfdFjakqg8OP31uYAPqhAf8iBvozAP
DqsgXUgEH3CRiLKR5cGHEu4rS4CTeM+7e+rz4NoBz1AtFSZi97TfeNOdB++W
LH/sogT7k+z8+8laHuxbHD85Lgftbz4jptvEA/cNp83PwCxhZPeQj1DeI9E/
kWCJljWrSx082KrYJVYAbBOtu4FjhgenSnqz68lC/uj1TxZR5sVTB58t3JaG
80H8Yo+TJi/Ovr3+nQf4p0G0VupGXjx0wVRFHzyXeL1RBvPi59s14r+vZSKt
bcULqk68+Phza3MZcGrm34NGcbx4IFzmSLMk7Nd7gvIjr/Pi4MNV89ngiqXl
WcZNXvxJ4qbxGfAXW94E0yx4/o21ZyOYm1291uoFL3YdINdkS8D5pLiU/3od
L1Yfk+Q/D1Y6YLD/SxMv/rV/x9qjYJMnO6f3feXFMRveX5YHnz7moXR4nBfX
mYy2FIrD/kBl+mfO8OKH06KeieCk6pCa/iVenHB/XUsI+LHQBccTFD48m8au
ZAquZvBnF/Dz4ecdm4Q1wW+9UibGhPgw7ZtxtzB4oD77coAsH/7XWkIfFoP8
46f57akyH+54nhjZBmaVeio/r8mH7xUqfnwFXhtUXx1hwIctu6Xl74kR75ss
uWowH050bla+AjZo/mJPMufDSUF+QhFge8XfYzG2fFi4SOShC5ihvrftoBMf
/hY1rG4DVtN+8VzXlQ/ryApEmIGT9NUy+Nz4cE8j+bYh+J/xzYv9J/jwjUKH
cxvAHqbsvi/8+DCJJ9JQBdyy65R9cjAf7hZlqZUGG9l0GnpH8OE+AVcRUXCO
4y4502g+3KAiZUQDU10rKFIX+SD/VK/nAYe5KY5PX+XDkxk1MxzgvpOJbe9v
8OFHQQ/jSGAr/9XnWbeh/bsXJldEYbxPe2VEpPHhwcM6GktguTPtF+2y+XD7
aMemBfCVGDNfjUd8+L6S/5p58GxcmT17CR8eNQ99Mwc+lChj9LOcD4ddCrAi
nr+9dVXuSTUfXpL//ZD4vk7aIuVKLR9W3mvxnSj/fvbx8aNv+PATM/Vf/8CU
gtY2ww982AFTKlihff6lJtWCrXy4PuioJxn8s6IoY6SdD5dJw/kebFYjcamu
C+IdfM9aEFz8+qLv3X4+PFwWdUkcLP5+xj5gBMZXYOS2HPh8yxGjXRN8OL/W
5Zw6eOz7Rzn5OT5cx+Fipgt27DLiWlqG/tFO/kbg2v688RZWfjy1lrJ/Fzhl
8lx1ND8//imz1HEMzLLAzHAW4sedsfYD/uATqwcvaYvzY83PO5rPgo159R16
Fflx4gzrxgzwQ3q2UZU6P6abfCgtA9PF6PKJG/jxM1tDWgN4QHF03GQLP95V
wub1F7xXw+mr2DZ+nO191JMV5nOVdkP1xA5+vPTF21wUHI/SLz2w48eBZ+Ny
zcB6TnbyJC/wDRXOInC66yuu9lP8OOGLhMhbMLe7FrM4hB/vO/eOdxDc6U95
cegcP64Q8nxIrMfYK9UOjDv8OE+7oygXzExU3XIrHfovz5x6C3a+nSLvl8OP
kyy+yI6DtXL8mNKl/LhUnM/AAPaDrzUKl8808WOGi6l8B/hhtALF4CM//lc2
ncouBfPRVCF2uhXiN1zXpgVe+04+2rObH4c7nPWIAR//KhdmO8ePlZLKLA1g
f5oflTmhrCiAF2U+91TDfiYmLmXxMUoAsxi/b54i/p7xp+SbS7ECOLFXKUJZ
nolepkmabb8igCvXp5L3g48oSm6tvCmA6+RSbr8C56+XMMgsEsAv37P2xSnA
ejYXUwv5CeUV3+njh/2al1vs4YZeAVyyn1d4C7jzvajS6KAAZgqllJwAn7MR
lTs8JYDFuEro9eCBIp6rihxUzHccP/ZRZqI9CTzvWSlUrDZWGHYTXHGKh6eb
m4pbdEpDa8CXdXgu3aFS8Wsn41leyBdaVdwxApLw+VPp8vfA3/af5VOXpuI9
W68lvwJHrcwlm8lRMW69+L0P3IL7c/5ToWIbl8IeZcg/4b37191Wp+I1/twl
5mCF8y3PnmhRsaAc9ag7OLix5s2IDhWzxYeeTQdLe+pZk/WpOMlNYO65KvF+
rbBdzpCKM6mlh7+Cxa3uDDuZUHGIaLQKBfJh3Tg1IGg7Ff9M6LkqDfa6fmEp
wZyKVwRLF3XBL1oDed/spuLqU9wrrmD34JGk33upeO54/d0AML/oEalVWyrW
Tre1iwUf2r9HS8+Zinv5HBTzwFwrr8utD1LxvMuSWSWRf+8bIe9DVLxb9UfS
GzB7r+reLHcqnjn0sLEPXHgu/XuNJxUPDTU9nQA7KIoc7vCi4oPyl3pXwKsN
V4dmfalYVuKMDZc6zD8Pdn96ABVzdm3nFgJbc4cvagZTcUdEAP9a8OKjieid
oVR8ijXrqDLYcrzzRtQZ+P6yj6A+eCbBXjI1mop/xBmGIPB97fdZz2KoOMXA
x9gMbN66VfPLRSqWX5PubQlmBlU+HYujYluNE1w24Nsi6425r1Hx7GW3NfvA
WytzGhQToX6kfns/eNhZao9JMhV/cbRLcQXfWL7x7cAtKi76HUo/Cja6z33o
9F0qNhzTobuD+9DZPzfuQ3xi197xAF/tmfN7/ICKSys/Fp0A653zWXibRcVG
KT12XuAuhf6zA7lUXKX6N8EbfLFhPzfrIypeOht33Ae8waMlUaqIij8X2P8i
/INrp8TmEpjPFX2zhM89qsm0e0LFkSWfKwhr7NbT8HtGxVM5T5UJt40VPImr
omLjHNUdRPmRCfJbcl9Q8boXDWuJ+pW177yuZUC8FhSLifZ9+kK16qyj4m2e
3Sye4NCgC18XGqiYLH5N+DhYTuSfi/BbKi4Wezd5DPyuInBwfTMV04M17x0B
BzqP+Fp+ouIFoz1ih8AN975HnftKxWkmuredwb5oD1daOxUv31HPIeIt2vP6
etVPGJ8U05t2YE+FsoyJXpj/N3boW4FxgOT8t34YD+4plV3E52tjdr/8Q8W/
dsTw7iDKd3WcvzxGxWvP7Mk3Idp3d2W3wiIVa6atbtABLwy5Z3KvUHHzGu9H
64n+6X+aZ65SsZVsmqAmEY+vGZkvOGiYYo+KFIn40nYsONBoeJo0syIMLjlU
YrVFiIY1O3i6aMT4PBbPkheh4QDB+nw+Yjx3/7ViStLwRjKZhYP4O6yLiVmX
VGhYoGH/jUmY7xarP/dUIxoumHEfItaLrJVZdsZWGp54ek6vDjyf+njxoikN
J3ovub0A5xhEZ9vvouEFlWHPEjBrsPLSmAMNz97ZOXcT3F6fsLfNiYZzumt3
XAcXCy5mPz9Awz+HAk5fBruUvN978QgNDxWc9IsAPx89lSPrQ8MiDL0nLuBE
w44l8ikaDhud/OMAPnF5u/VYAA1felg3ZwUWVRFZrgql4de61x8YgwOPVlvb
xdDwZt/DIpJgjR+cK7Gp8PnSZZGPsB+pSH/MrUuD+NyXCakDKx67acOSScOi
P9NTn4HXjik/DM2jYevgqE1pYCrrTluvchpWCYvWOwnmNaf9e1hJw5YzT90O
grmutD/sr4b4/QjQ2QNmXXPin0sd9HckLGUDeFo1Ls/6E4xPhFo5E/Zbpo+t
XfwXGpa9oajeBf5bJrH69isNb1I9x9MMHthSYLf9Fw0bdVtP54B7owNXo7pp
uIazcjwR3NVolP/iN9Rf4WMUCf5u3byqN0zD+Y0lj23ArSnJ+QF/aZhPXbfJ
EPy546B9MZOGUxWmxBTAb93G8lXnaPh4P7f5JOSPF6ECDpLsdHxvRErsPLjq
5TcWJzIdu1gN67qDy9nSHyVz03HiwSZ7c3Dx1fUkARodB195dJ4TXNAy/2iX
EB2Xl2TF9kH+yhN55XBRhI6vxqeeegXOeGBdQFpLxxJhgX9ClIjfn8T2GcvS
sUe8xXFr8F31XlK4Ah2fcON5qgpOeuq/b1qNjqvcN2d+VYTzQ9MN1sFNdBzK
/lxQFhzNf6BQ3pCOT0fst2VCvj1jq+B4yJiOA5pfar4En/71pLB9Ox3HclTd
sgefmGhzfG9NxxyScwn+kK/d9e6zcdnTcW+eHFMXfDTcvcjUkY5ZlIeezkH+
P8Axx1bjQsfKi9r7g8GOFjVFS4fp+JV9geZGsP21C076buBHBZZjcH+yad3D
HuRBx2P/ikpywVb///8RMc1Gy8EV/D+izW2h
          "]]},
        Annotation[#, "Charting`Private`Tag$368842#5"]& ]}, {}}, {{{}, {}, 
       TagBox[
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1: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
SEGGHw==
          "]]},
        Annotation[#, "Charting`Private`Tag$368905#1"]& ]}, {}}, {
      GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/eZp9dLirSfs08DgmX3+ArEQxeCzcP6M8z12UloX
4fzUmut+hg2X4Xz9FTs/9Jy6CueLfzvvP9vtBpyfU7hey3zGLTj/Pt/hQ63S
d+F8f+28NxKT78P506w+npD58ADOn1LgWtWm/wjO97Ste7kt8jGcX3OyaSFn
3RM4f1+a4g7T3U/h/O2zlvRoPH4G5++/f3D/F+UXcL7rk1XWj+NewvlN9RWl
M1pewfnntB/wqh9+DedfyNNJqXnzBs5/eEhIcrXeOzi/8NoRsT9Z7+H86AO6
Lzk9P8D5bHJuZUwvEXye4wFJcXUf4fyL/geLTgt8gvPlHtYZLV2P4B/bqxf4
yPkznP9tkbZ8zxME/2l6n6B70xdE/FQ8TkoV/QrnM05sTf6wBcHX+yp5+J7n
NzhfylLE/d5tBL+vNbrKq+o7nB8rO5VHiu8HnL95r7Rf2DoEP3XllHdfnX/C
+ddKijcvu4bgn/OYr36k9Becr5Sx95cL1284/2+/Rq3RagR/xvSfyoaefxDu
ebVHc/IdBJ/b7ey9xJq/cP6TN+c/TRb8h0gfxRba1xcj+LOZ3gm1O/2H88Xu
To2cdQ3B7zNqlP9sy+AADx/nkzVeLKfh8j0CamoLRBDyMPUMYPDBHpafYHwA
tW2XCQ==
       "], {{
         {GrayLevel[0.5], Opacity[0.2], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{50, 53, 54, 1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
             13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
            29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
            45, 46, 47, 48, 49, 52}}]]}, {}, {}, {}}, {{}, {}, 
         TagBox[
          {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 52, 50}]},
          
          Annotation[#, 
           "Charting`Private`Tag$370111#1"]& ]}}], {}}, {{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.2902936483990315`, 0.9425}, {-1.0146772964222097`, 
         0.9425}, {-1.0146772964222097`, 0.9425}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.4336834233210634`, 
         0.9349999999999999}, {-0.471859474264855, 
         0.9349999999999999}, {-0.471859474264855, 0.9349999999999999}}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.2830628203725736`, 0.9275}, {-1.0381281058043257`, 
         0.9275}, {-1.0381281058043257`, 0.9275}}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.5290640544305867`, 
         0.9199999999999999}, {-0.013893559273156662`, 
         0.9199999999999999}, {-0.013893559273156662`, 0.9199999999999999}}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.1646558499234185`, 0.9125}, {-1.4808419316428658`, 
         0.9125}, {-1.4808419316428658`, 0.9125}}]}, 
       {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.4160582125863805`, 
         0.9049999999999999}, {-0.547302447752412, 
         0.9049999999999999}, {-0.547302447752412, 0.9049999999999999}}]}, 
       {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.1877158603745666`, 0.8975}, {-1.393447545659585, 
         0.8975}, {-1.393447545659585, 0.8975}}]}, 
       {RGBColor[1, 0.75, 0], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.156018585281682, 
         0.8899999999999999}, {-1.5125475951172689`, 
         0.8899999999999999}, {-1.5125475951172689`, 0.8899999999999999}}]}, 
       {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.2588286936886197`, 0.8825}, {-1.1142858609569766`, 
         0.8825}, {-1.1142858609569766`, 0.8825}}]}, 
       {RGBColor[0.571589, 0.586483, 0.], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.337766588297384, 0.875}, {-0.8519611453559294, 
         0.875}, {-0.8519611453559294, 0.875}}]}, 
       {RGBColor[0.915, 0.3325, 0.2125], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.112865729918472, 0.8674999999999999}, {-1.662966100360153,
          0.8674999999999999}, {-1.662966100360153, 0.8674999999999999}}]}, 
       {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.544352780525348, 0.86}, {0.057310036876143534`, 0.86}, {
         0.057310036876143534`, 0.86}}]}, 
       {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.5382308616280542`, 0.8524999999999999}, {
         0.02941976778888177, 0.8524999999999999}, {0.02941976778888177, 
         0.8524999999999999}}]}, 
       {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.0302489141900253`, 0.845}, {-1.9169634563883176`, 
         0.845}, {-1.9169634563883176`, 0.845}}]}, 
       {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.061430205220222, 
         0.8374999999999999}, {-1.8260195531697319`, 
         0.8374999999999999}, {-1.8260195531697319`, 0.8374999999999999}}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.272777247235948, 0.83}, {-1.070904662397098, 
         0.83}, {-1.070904662397098, 0.83}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.5731165770751083`, 0.8225}, {0.1930374302742932, 
         0.8225}, {0.1930374302742932, 0.8225}}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.1289595706294815`, 0.815}, {-1.6083870556577062`, 
         0.815}, {-1.6083870556577062`, 0.815}}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.5076628529760723`, 0.8075}, {-0.12440794743378597`, 
         0.8075}, {-0.12440794743378597`, 0.8075}}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
        LineBox[{{2.283398490009366, 
         0.7999999999999999}, {-1.0370469927050427`, 
         0.7999999999999999}, {-1.0370469927050427`, 
         0.7999999999999999}}]}}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.756389061160777, 1.09760113}, {-5.756389061160777, 
         1.09760113}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.806263308699432, 1.13251156}, {-5.806263308699432, 
         1.13251156}}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.9826204371182, 1.09609293}, {-5.9826204371182, 
         1.09609293}}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.898918656975829, 1.16196488}, {-5.898918656975829, 
         1.16196488}}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.972117118892186, 1.07427223}, {-5.972117118892186, 
         1.07427223}}]}, 
       {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.741734486875343, 1.12765957}, {-5.741734486875343, 
         1.12765957}}]}, 
       {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.793634291489022, 1.078125}, {-5.793634291489022, 
         1.078125}}]}, 
       {RGBColor[1, 0.75, 0], PointSize[0.01], AbsoluteThickness[1.6], 
        PointBox[{{-5.807686091563362, 1.07287449}, {-5.807686091563362, 
         1.07287449}}]}, 
       {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.768333062286134, 1.09119497}, {-5.768333062286134, 
         1.09119497}}]}, 
       {RGBColor[0.571589, 0.586483, 0.], PointSize[0.01], AbsoluteThickness[
        1.6], PointBox[{{-5.68161926108807, 1.10806595}, {-5.68161926108807, 
         1.10806595}}]}, 
       {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.01], AbsoluteThickness[
        1.6], PointBox[{{-5.940774673191039, 1.06624331}, {-5.940774673191039,
          1.06624331}}]}, 
       {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
        0.01], AbsoluteThickness[1.6], 
        PointBox[{{-5.761204443021616, 1.1672326}, {-5.761204443021616, 
         1.1672326}}]}, 
       {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        PointSize[0.01], AbsoluteThickness[1.6], 
        PointBox[{{-5.781156018784461, 1.16510388}, {-5.781156018784461, 
         1.16510388}}]}, 
       {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
        0.01], AbsoluteThickness[1.6], 
        PointBox[{{-5.990925623454681, 1.05504587}, {-5.990925623454681, 
         1.05504587}}]}, 
       {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
        0.01], AbsoluteThickness[1.6], 
        PointBox[{{-5.753593889879423, 1.05905512}, {-5.753593889879423, 
         1.05905512}}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.908471944684373, 1.09398496}, {-5.908471944684373, 
         1.09398496}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.9228812678413645`, 1.17759197}, {-5.9228812678413645`, 
         1.17759197}}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.770524968617844, 1.06864942}, {-5.770524968617844, 
         1.06864942}}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.662373194785421, 1.15485733}, {-5.662373194785421, 
         1.15485733}}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.01], 
        AbsoluteThickness[1.6], 
        PointBox[{{-5.847597953160633, 1.09616246}, {-5.847597953160633, 
         1.09616246}}]}}, {{}, {}}}, {{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        LineBox[{{-5.756389061160777, 1.09760113}, {-1.0146772964222097`, 
         1.09760113}, {-1.0146772964222097`, 
         0.9425}}]}}, {{}, {}}}, {{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        LineBox[{{-5.756389061160777, 1.09760113}, {2.2902936483990315`, 
         1.09760113}, {2.2902936483990315`, 0.9425}}]}}, {{}, {}}}}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"1.77`", "1.42`", "1.07`", "0.72`", "0.38`"},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                    TagBox[
                    FormBox["\"Ablation Depth (\[Mu]m)\"", TraditionalForm], 
                    TraditionalForm, Editable -> True], {
                    FontSize -> 11, FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False]}, {
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.0863508, 0.145602, 0.203418]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.0863508, 0.145602, 0.203418]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.069] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.260705, 0.406664, 0.445423]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.260705, 0.406664, 0.445423]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.069] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.575819, 0.695886, 0.635552]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.575819, 0.695886, 0.635552]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.069] -> Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.866077, 0.862389, 0.597576]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.866077, 0.862389, 0.597576]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.069] -> Baseline)], #4}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.957885, 0.809857, 0.369177]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.957885, 0.809857, 0.369177]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.069] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}],
                     "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                  AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontSize -> 11, FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.0863508, 0.145602, 0.203418]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.260705, 0.406664, 0.445423]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.575819, 0.695886, 0.635552]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.866077, 0.862389, 0.597576]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.957885, 0.809857, 0.369177]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    
                    RowBox[{
                    "False", ",", "False", ",", "False", ",", "False", ",", 
                    "False"}], "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"FontSize", "\[Rule]", "11"}]}], ",", 
                
                RowBox[{
                 "LegendLabel", "\[Rule]", "\"Ablation Depth (\[Mu]m)\""}], 
                ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Min Ablation\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontSize -> 10, FontFamily -> "Arial"}, Background -> Automatic, 
             StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"FontSize", "\[Rule]", "10"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{1.01, 0.85}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      FractionBox["\"Bulkhead modulus\"", "\"Cortex modulus\""], 
      TraditionalForm], 
     FormBox["\"Expansion Ratio\"", TraditionalForm]},
   AxesOrigin->{-4.605170185988091, 1.},
   AxesStyle->AbsoluteThickness[1.02],
   DisplayFunction->Identity,
   Epilog->{
     InsetBox[
      BoxData[
       FormBox[
        RotationBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox["\"Experimental Data\"", TextForm]], "InlineText"], 
          Text["Experimental Data"]], BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]], {-6.5, 1.12}], 
     InsetBox[
      FormBox[
       StyleBox[
       "\"Moduli consistent\\nwith data points\"", TextAlignment -> Left, 
        StripOnInput -> False], TraditionalForm], {3.7, 0.87}]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {
      Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
       15.954589770191003`, RotateLabel -> 0], 
      Charting`ScaledFrameTicks[{Log, Exp}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{550, 300},
   LabelStyle->{FontSize -> 12, FontColor -> GrayLevel[0]},
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{-6.907755278982137, 4.605170185988092}, {0.79, 
    1.331259186608892}},
   PlotRangePadding->{{0, 
      Scaled[0.02]}, {0, 
      Scaled[0.05]}},
   Ticks->FrontEndValueCache[{
      Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
       15.954589770191003`, RotateLabel -> 0], 
      Automatic}, {{{-6.907755278982137, 
        FormBox["0.001`", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
        
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.010\"", ShowStringCharacters -> False], 
           0.01`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.100\"", ShowStringCharacters -> False], 
           0.1`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.517193191416238, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-8.111728083308073, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.824046010856292, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.600902459542082, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.418580902748128, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.264430222920869, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.1308988302963465`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-7.013115794639964, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.214608098422191, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.995732273553991, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.4011973816621555`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.6888794541139363`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.912023005428146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.0943445622221, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.248495242049359, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.382026634673881, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.499809670330265, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.298317366548036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.703782474656201, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.991464547107982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.214608098422191, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.396929655216146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.551080335043404, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.684611727667927, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.802394763324311, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.907755278982137, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, 
      Automatic}]],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.0863508, 0.145602, 0.203418]], 
          
          Point[{{-4.605170185988091, 
           1.003285642989791}, {-2.3025850929940455`, 
           1.0380457909199816`}, {-1.152013065395225, 1.0887686072759417`}, {
           0., 1.1628584212741768`}, {0.7654678421395714, 
           1.2212826229131475`}, {1.534714366238164, 1.2691527807146366`}, {
           2.302585092994046, 1.3133191152097772`}, {3.068052935133617, 
           1.331259186608892}, {3.8372994592322094`, 1.3274813538966557`}, {
           4.605170185988092, 1.3305420279148752`}, {2.4849066497880004`, 
           1.3165478276252967`}, {2.70805020110221, 1.327193347908715}, {
           2.8903717578961645`, 1.3281740504797106`}, {3.2188758248682006`, 
           1.3258615565192415`}, {3.4011973816621555`, 1.330494031334664}, {
           3.5553480614894135`, 1.3280294724686326`}, {3.6888794541139363`, 
           1.3282722539974898`}}]}, {
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.260705, 0.406664, 0.445423]], 
          
          Point[{{-4.605170185988091, 
           1.0026866757548552`}, {-2.3025850929940455`, 
           1.0344167969799964`}, {-1.152013065395225, 1.0792945353063936`}, {
           0., 1.1418323338003318`}, {0.7654678421395714, 
           1.1820592405831385`}, {1.534714366238164, 1.2142426972288591`}, {
           2.302585092994046, 1.237515884837215}, {3.068052935133617, 
           1.2277132827734731`}, {3.8372994592322094`, 1.2186115030103675`}, {
           4.605170185988092, 1.2075857760218767`}, {1.791759469228055, 
           1.2214999965296829`}, {1.9459101490553132`, 1.2263002545794082`}, {
           2.0794415416798357`, 1.2300963985478182`}, {2.1972245773362196`, 
           1.2336956260653864`}, {2.5257286443082556`, 1.2330333343584994`}, {
           2.70805020110221, 1.2308469368181068`}, {2.8903717578961645`, 
           1.2319359945057635`}}]}, {
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.575819, 0.695886, 0.635552]], 
          
          Point[{{-4.605170185988091, 
           1.001866744022619}, {-2.3025850929940455`, 
           1.0272790542061252`}, {-1.152013065395225, 1.061301526113696}, {0.,
            1.1034334492029383`}, {0.7654678421395714, 1.1296912677816027`}, {
           1.534714366238164, 1.1396029410287019`}, {2.302585092994046, 
           1.1483677858646164`}, {3.068052935133617, 1.134417791380786}, {
           3.8372994592322094`, 1.1172311572226061`}, {4.605170185988092, 
           1.0979427465102365`}, {1.791759469228055, 1.1420941160861269`}, {
           1.9459101490553132`, 1.1436376010207154`}, {2.0794415416798357`, 
           1.1453759574003108`}, {2.1972245773362196`, 1.1474747379264936`}, {
           2.5257286443082556`, 1.1491540499755462`}, {2.70805020110221, 
           1.146379645199064}, {2.8903717578961645`, 1.1374626907120455`}}]}, {
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.866077, 0.862389, 0.597576]], 
          
          Point[{{-4.605170185988091, 
           1.0009404371943789`}, {-2.3025850929940455`, 
           1.0157704720436695`}, {-1.152013065395225, 1.0351153486897342`}, {
           0., 1.056370624425281}, {0.7654678421395714, 
           1.0673818871150402`}, {1.534714366238164, 1.0728630980636353`}, {
           2.302585092994046, 1.0744300252043604`}, {3.068052935133617, 
           1.0466628342736763`}, {3.8372994592322094`, 1.035829122193927}, {
           4.605170185988092, 1.0289969720670218`}, {1.791759469228055, 
           1.0732926989840614`}, {1.9459101490553132`, 1.074095878082254}, {
           2.0794415416798357`, 1.0735758945451865`}, {2.1972245773362196`, 
           1.0712135524585498`}, {2.5257286443082556`, 1.0664492605006515`}, {
           2.70805020110221, 1.0571838481930091`}, {2.8903717578961645`, 
           1.0550046763550098`}}]}, {
          Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.957885, 0.809857, 0.369177]], 
          
          Point[{{-4.605170185988091, 
           1.0001077194834607`}, {-2.3025850929940455`, 
           1.0045163828999326`}, {-1.152013065395225, 1.009335082895547}, {0.,
            1.0143061381828296`}, {0.7654678421395714, 1.0165291771628895`}, {
           1.534714366238164, 1.0170231631371955`}, {2.302585092994046, 
           1.0171919001682825`}, {3.068052935133617, 1.0141686662029277`}, {
           3.8372994592322094`, 1.01070725384161}, {4.605170185988092, 
           1.0081475565807179`}, {1.791759469228055, 1.0173811883092876`}, {
           1.9459101490553132`, 1.016615630792919}, {2.0794415416798357`, 
           1.0163519469219264`}, {2.1972245773362196`, 1.0160070855169814`}, {
           2.5257286443082556`, 1.0166636935847233`}, {2.70805020110221, 
           1.0162579094649837`}, {2.8903717578961645`, 
           1.0168429493156712`}}]}}}, {{}, {}}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.0863508, 0.145602, 0.203418]], 
           Line[CompressedData["
1:eJwl2nk4lN8XAHC7GTPDvJNSRHaSVLZku0cplVCWokIlKkmlUqSSytJClqSV
kAqVFC3Im3YlyZZCviqVqMGMXX5nnt8/PJ/Hu5z7nnvPved5aGzY7uovISYm
thF/iH47TZl8+85WHu3V/Mx2D4dPgmPLjao28+iH8+yy/dCnBwJu/fTn0flF
B2+4ouvqi25OW8ejVVnLTxij++29Z1p58+hD/t1+Wmile1I3V67m0VZtPnWK
6NVJbvmn3Hn0BYua3UNsPokQH5lxYwWP1jz7OaMLfWlHZt4zZx5dpVS1tg3d
5tyTO7KYR284vC/iNVricZqB0iIePfO3VfNjtNZMyDVewKN/7Rt6eg8dwEq4
scWGRwvFQ7Uy0bHh5tOPWfLoGQdtz55D3/jVcj1jLo+erK54IhFd6XlMv9SU
R8+6PjIah+56aXi9cQ6P/tow1BmFlp9bp9dnxKOvBk1wi0DPytl/Td6QR/+Y
7mQSil4+UUvPYDqPVq7Oi9uBDjlambNQl0ffm2rqvhWd0rdTd70Wj9ap7Twd
gC7aMCUnQp1HNxfW2WxAN9TQOmmqPHpFRL+nD3oQNl+9q8yje/+6t61GKxco
6FQr8WiTd4KaVWirafezOxV5dHTjpxke6LXxPtoyPB695i2ryxV9cEw6W0OB
R+tuO8ldgc4Iuqllw+bRa8PXn3VBP/nsnuXJ5NFb7iUcdEa3Lx3V3C3Do599
VnnmhJZ6lJWZIInxFcgFiKw73VEzTwyfJ1i3QWSHtN4rL8YoekKA1n2RN8ue
12gfpmjFlys3iJ53PNTuytgARV9sHF8vel/+95/qU4QUreqpdW85usr9dIZp
L0WzmC9WiuL983Su+vK/FF2f2+XgjuaafEnf2kXRPWMXjq1EG2dGT4v5RdFV
FR85Xmg3yig9s4OiWx5ea12D3h1Zr/b4K0UnZXH6Rd8v9W/E5aY2it4ACq6i
7/vAR1tN2ELRpcvv8P3RTVVvLnE/UzR1ZrB6C3pqvvIlh3qK3l8StzgEbatS
MdXvA0XvVmtpEeXX9/iWiwerKdr4/s+8/ejMzQ8uFL2m6JcnrDqPoZ81+qrU
vKDow4tPrjyB/r5I9kLXU4p+bX297zRaX2flea3HFP22yv3BRfTt//rSEgsp
WumytGkx+vRp7erg2xSdcfXW4TLR/CEe0svyKZrWbhE+Q5tfKt4pk0PR86zu
O9ShSz3Dlu4/R9GJ/yS3C0Tzt/rfyMZIitZ/nvjeEtdX/sFZxvMPUHQUZT3b
Hn1q5rrN08IpmtEvLHBCLz/xpK5pF47nQM/E9ejGRUdvOm+i6LNWoTvi0N/K
mL4WzhStYGa4vw39IsjyzERHig6rsu7/jb6msvVNrwNFZ9fRyQPowLC3c2/a
UfQv7QhzBXk+6TFN4GqaUXTxUSNVQP/LU6xgTaXokrGBqOvoKeen6Xz5xaWP
P3jjmKLAJ28veMf3dHDpLfUnZ2ehIy9dGJD8xqWrN1WYFaJ/ZihV6rdy6XcB
r668RxdfU9ge8oFLr52cKqbA5RPXovEH0iVc+pRJc1Mi+vj7L8sMT3Lp/TGa
YgUU5vODarFtHJcW3mkaqED31K6ZtiKaSytGm3Eb0J6NjT17Irm0v0Jr5iha
t7U6tXw3l7b5KrPckccnFb/L21y9uXT0Xq/KP+gRmYzdYUZcuiCBsndW5JPw
XMWk8zO4dLDD7ZaN6GGnuNsl+lx6ru3T1P3owZSQzjFNLr0yc/mmG+h+zYXr
opS4dO1KxSiZiXzSa9vpeEIMxyv28fILdF335kWWVxXoHU2K4T5KfFJr6no4
Il2BbljwVjIM/WG/Venjcwr0gwcKN5PR75nyxgviFeg1+218XqPf6txVXbZX
gdYJdbAyn4zz03tM4L1Ega6pudk2cQqf3K1KzDrcLU/rZ8a2dCnj+ko55ejw
Q552yJDu4ajwSeHquD72f/K0XUDJ9Fnogh+RC9Lq5Onhp3VyIeh88R1fb5XI
0wpqjSeG0DlmzlrNcfI0YbbEKajyyflLclnmuvK0R7pkxKppmM9tRzJ/+3Bo
9R+BW1Zp80lW07kCFS8OPfOt/ehB9IuFBY8d3Tj0hahHt3PQbLWWT3kOHNp8
bsS+fnTaO/MJQbM5NB0blHhWB9fPrM4jXeIces7k9P++6PJJa89y/+5sNq0O
tmJx0/nEJlRN/28ni366c8DbZhbuH+sdsjK/sWjSN1ttJ/qo0w61la0sOvjZ
b6mr6ErtCsWyGhb97c/PhZzZfLKy1l/8xAMW7ZmsnPoFvWP2zU+60SzaJFl7
xwljjL/T6pSPBosuN5tGiZnzCdPXq7dqlRzNsuXM87bhk+qZ3xtl3jJo87Ef
X8848ckxf2X7ptWyNBUlqKvz4ZOlB/4Koiul6SJjL5lPu/hE7N82w3fuUvTo
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
/w+NKbfn
            "]]}, "Charting`Private`Tag$368842#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.260705, 0.406664, 0.445423]], 
           Line[CompressedData["
1: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
gPgf7za0Iw==
            "]]}, "Charting`Private`Tag$368842#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.575819, 0.695886, 0.635552]], 
           Line[CompressedData["
1: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
+WXcHNS/s3i+UbYXfUvwVYnk56CUGPXukK29SCa53rQNbD708I22WS+akalS
WiHAQez4hFu513oR4evX/QQcO35VMqCnF03nr4qrF+QgvZy9Wzbk/kLGKUIj
M0IclCrW5RG5uR/Fh0sZiItykMVJ6/36pv1Ig3/a0RJMr2rUmHHpRyqjR1bH
gs+fejPjEt+PMjRb3rMYHGRamxuqPdOPrknZHhBkctDs1XOZI8QA+hw7N9/D
4iDLIaHvRsZD6Mm5iiuuyzjoSp6EqpXTEOoVjJ1NBGecVPU+5jeEOnOO6teB
OUP61MvZQ0ink0tz43IOujXsv7mQMoxyUzwrJ8FVIxPhjIph5P1wJt9XgoPU
x7q1W9b+RhmJO/ttpTnoup+d2aNgyKPzpmllK2D8X9mJ6jGQN/zPCPWBs3co
9BWkjqGCm/+ZLVHgoLr5X5fzSyGvG/hfOAmWvH46L2cIvhveVWlKKnLQ07Dr
/Bn7SFTOt/DfmZUc1JWUUx4P/bC9OUIRUuGgHey/qgEPx9Hsr9yMQTUOWrpR
68+K6AlEWbZ6Sk6Dg6bbOkKEPadRTX/kUT8tWB+2boxuyCxKSXG6zb2Lg1gU
raTPd2bRKPmgXBrssmdThtv9WRTdjPq3gkUaFIuiS2bRxmcOyBNs201p7u6Z
RRlv7k5/AU9R3i65rjOHoiqEuIv1OGjjXqM7r/7NocChO+c8d3NQUMSuREv+
eWSifsz1Jri9USt9iDmPYmzYbllgf5s1z5asmkd8P77GdYDr3YWbnCznkXbw
kux9BhzkHlnPohTNI2t2Pu/mPRyU2XwwWs9jAV03uTYruhfeL6FCNPguoKXn
W6U2gI0d/o3YBy0gVfVguwNgzkCqoe/9BVSflrn3Llh7YYSrsGEBLWxld0gb
cdCQ2Ov/aFJcWP6Ba+AmYw66geyVz13lwlF97BvXTTmoJCaad88ebjyw8Mq5
9iAHlUcd0Vhpyo2796OgP+CqiPXOXObcOGtEpETWnIM+htRVP3fgxpVfLmh6
g3suCd1cdZ4bvz0rHit9iIOWOAcwaFncmPgTftfTgoNOb/aSqePlwRYht5IX
rDjIZ6OOaS6VB4vU62uoWHPQpXWMq0GicH1F1W1TcPCqwi5tKR78mWiISgKn
yAymP9rIg+VaRrw3H4b38x1dHXWEB1vfly+2suGgRp4NNh7HeXDn31UxF8Ft
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
wVaenFvbQ2lY4vVuSj347BtlrjcxNNxTZ61VCeYhidKbCTTsTtc+Wwy+LW3j
bZZKwx7OySfywfnekb++5tFw6MkZv3vgnhVTHzhVNPyE7jp3Csz5eFVicw0N
NxtotjqBufwEXM7Xw3i+Ke6xBEs1LluY+UrDijqVP3aAVa+kGGl307CySiHv
OvCW1crx/v00LBmj8UgefCBg8wa+vzQ8tO76XR6wo3rFZYMZGrY7d7OGA9/H
nl/0akO56bjTM8u3Gxy60dxJRISONfMSMAEmur3uLleh452BfULnwHUR/35Y
r6XjNQ8FXjqCv2kGqCdtomOv1m1tRuDJ6Ki38piOFW8bS8uD1Xc9nl5lTcey
KflJBBRjO0a37nZ3oOPnnu9ms8B7E9nRhc50PPqQTLsFdh6vU9vkRccW1waf
HQInpY/Y7Qij4wXaQGgHfP/n7juXeyWKjr3tfr6oBD+fmZ0g4ui49kyfeAq4
6SD9tn4GHesywnYfBgtR1KpMK+j4oOMz5jt5DhJ//FQk6hUdN1BO7XwAVrbV
tGmqoeML1et9fcE6RYZ/LD/TsWOd3hIV8IVjJ5SPjNJxzBoFbx85OO8YY17p
f+nYcOIaYQCOKT/P7p2hY/etPTzi4EdiwVZugsJY3kTdulgWvpdeZ970XiGM
N/IYj3TLwPeP0s/fgQfBfn6qAtIwv2pmLXbWwljY90NlrRTkz40VLzY7CGOK
uKpxOHheOy6k100YT6QY7xEFZ1kZKegHCONHBZfz+SWhngl7dojyRBgPFS2z
qFoO6xstv+NbiTAW++f5+yy4Nj5coahcGEsEsE4pg1Myj486vRPGdq/ClIKW
QT5kS4W+6hTGBX2+JtuWclAs53p5gIgIfpf8tcyFBfE3PZZ2WEwEqxwydxUA
uy3YhW6UFMGyHGsyiwn5kL7NoltJBAfp297sZsB4lYZHdXaKYIF1p6uNRCEe
rc0Vud1F8Jbxk/G9NA76zF5582qNCHZfohGznsJB2QErBTXrRbBMMioq4OUg
P/2VQX+aRfAJOelPq8Cy7xUDXLtEcKwjTUGOh4OOf1bwOzgpgrPFJbUXFkg0
NSzvpqIkih/6PW1IniGRhKTM3np/URz7/f6OeA6Jhr9JvwsNEsX1US7JAuDK
+9K79W6J4jfN4uvPkyQ6qiStWxonip9a87Isx0iUu15KM71QFPemGbRK/iaR
poHE6vPfRHG2iUF32QCJ1MuEAkWlGXjXt/H61B8karW5Jqwmx8CMRiVpObD/
3OTd3QoMbKm/W+h+F4kacW/WZVUG3hDUWJTeSSKft+x3QxoMfFvqUzD7O4kq
ms/S35nA8wPSRlpfSOTiMxTz04yB19m2pX9qJ5GI+FGZhYMMHKx5R+M42NFm
n/qWwwwsLrj7Z1wbiSjdq8wyXBhYO8qyjL+VRMajHXf8rzLw40d9Z8WaSfT3
9iHppAAGrpedWF3WRKKUjR8y/gtkYJ4tCwWO4LFzpcW/wxj4pxrmetxIojuz
d1pt4xmYq0tD0rKBRF+ohlLbnzDw24osw5d1JHJd+SyN7GbgN9xxrz/XkAh7
S0+19jKwzIi2RQRYvCrQpLKfgcPV1/bog6sdrKZu/mbgxGsrRorekUghcc5k
5T8GHqMaXY5+C+0z90xbMJl46aPCXsM3JNq78G1fOWJi42z5fUkEiVaY7s5M
02XiBrG+3H3gqaRH/0L0mbhut+QbHnCWZkDmISMmXlZDW3uCTSIeH5WZ3xZM
7NA/G7OukkQvhs9krfBkYs/klWKPXpBozRf+uaAkJr6mzTFwKiGRqlz9w1f3
mZhaQLXjAisdizvAlc7E5u9Em5KKSST7WyXbN4eJI4UiPzcVkYjBY3jQvYSJ
E2LUdbY/I9GfVWE5+z8xsdANc9vPj2A+PQ+aRzQxsbuQ+vNj4JFnUgu1n5n4
9W5cThaS6NfOfHO970ysGTQaIgBu2/9xYcsgE8enJb+Vz4d48BW1kKaw8Dkn
W+/5hyQqq2zlshZg4S1JYlvPgEt4U/PuCrFwiGxI448sEj0OX88tymRhIuOa
bXkmidIe7M/nlmXhhu0/9x1Kh/X+JWGpvYKF7XUSjhWnkShRrZv74koW1v/2
sZ8Fjin2svyzmoUZZ8Jo1akkCqq5w9O3lYU742+Y0FJIFCBiW6CoxcJJFXpn
DiWT6OrBlVaO2izsz9ZNSkoi0YXvRQXteiycu9DWtCKRRG5ki9WH/Sz8aTza
lj8e4nlLCi/1EAsr3HAx2RpHIqeLLoX6Vix8Qmv792OxJLLlm+Rl27Nwxavy
zOIYElntZRfOHGFh7T671213SHQoMth6mzMLJ3/uMJmKJtGB5n2Ucyegvy+2
bhYDm/7/9yu4qcLRY00Uif4HeqRdlQ==
            "]]}, 
          "Charting`Private`Tag$368842#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.866077, 0.862389, 0.597576]], 
           Line[CompressedData["
1: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
wv3J8P//z4B//goOf+/FQv8Deqg3vw==
            "]]}, 
          "Charting`Private`Tag$368842#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.957885, 0.809857, 0.369177]], 
           Line[CompressedData["
1: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
HuRBx2P/ikpywVb///8RMc1Gy8EV/D+izW2h
            "]]}, 
          "Charting`Private`Tag$368842#5"]}}, {}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Dashing[{0, Small, Small, Small}]], 
           Line[CompressedData["
1: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
SEGGHw==
            "]]}, "Charting`Private`Tag$368905#1"]}}, {}}, {
       GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/eZp9dLirSfs08DgmX3+ArEQxeCzcP6M8z12UloX
4fzUmut+hg2X4Xz9FTs/9Jy6CueLfzvvP9vtBpyfU7hey3zGLTj/Pt/hQ63S
d+F8f+28NxKT78P506w+npD58ADOn1LgWtWm/wjO97Ste7kt8jGcX3OyaSFn
3RM4f1+a4g7T3U/h/O2zlvRoPH4G5++/f3D/F+UXcL7rk1XWj+NewvlN9RWl
M1pewfnntB/wqh9+DedfyNNJqXnzBs5/eEhIcrXeOzi/8NoRsT9Z7+H86AO6
Lzk9P8D5bHJuZUwvEXye4wFJcXUf4fyL/geLTgt8gvPlHtYZLV2P4B/bqxf4
yPkznP9tkbZ8zxME/2l6n6B70xdE/FQ8TkoV/QrnM05sTf6wBcHX+yp5+J7n
NzhfylLE/d5tBL+vNbrKq+o7nB8rO5VHiu8HnL95r7Rf2DoEP3XllHdfnX/C
+ddKijcvu4bgn/OYr36k9Becr5Sx95cL1284/2+/Rq3RagR/xvSfyoaefxDu
ebVHc/IdBJ/b7ey9xJq/cP6TN+c/TRb8h0gfxRba1xcj+LOZ3gm1O/2H88Xu
To2cdQ3B7zNqlP9sy+AADx/nkzVeLKfh8j0CamoLRBDyMPUMYPDBHpafYHwA
tW2XCQ==
        "], {{{
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{50, 53, 54, 1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
              13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
              29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
              45, 46, 47, 48, 49, 52}}]}]}, {}, {}, {}}, {{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            
            Line[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
             17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
             33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
             49, 52, 50}]}, 
           "Charting`Private`Tag$370111#1"]}}], {}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.2902936483990315`, 0.9425}, {-1.0146772964222097`, 
           0.9425}, {-1.0146772964222097`, 0.9425}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.4336834233210634`, 
           0.9349999999999999}, {-0.471859474264855, 
           0.9349999999999999}, {-0.471859474264855, 0.9349999999999999}}]}, {
         
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.2830628203725736`, 0.9275}, {-1.0381281058043257`, 
           0.9275}, {-1.0381281058043257`, 0.9275}}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.5290640544305867`, 
           0.9199999999999999}, {-0.013893559273156662`, 
           0.9199999999999999}, {-0.013893559273156662`, 
           0.9199999999999999}}]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.1646558499234185`, 0.9125}, {-1.4808419316428658`, 
           0.9125}, {-1.4808419316428658`, 0.9125}}]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.4160582125863805`, 
           0.9049999999999999}, {-0.547302447752412, 
           0.9049999999999999}, {-0.547302447752412, 0.9049999999999999}}]}, {
         
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.1877158603745666`, 0.8975}, {-1.393447545659585, 
           0.8975}, {-1.393447545659585, 0.8975}}]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.156018585281682, 
           0.8899999999999999}, {-1.5125475951172689`, 
           0.8899999999999999}, {-1.5125475951172689`, 
           0.8899999999999999}}]}, {
          Hue[0.5585438199983166, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.2588286936886197`, 0.8825}, {-1.1142858609569766`, 
           0.8825}, {-1.1142858609569766`, 0.8825}}]}, {
          Hue[0.7946117974981064, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.337766588297384, 0.875}, {-0.8519611453559294, 
           0.875}, {-0.8519611453559294, 0.875}}]}, {
          Hue[0.030679774997896203`, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.112865729918472, 0.8674999999999999}, {-1.662966100360153, 
           0.8674999999999999}, {-1.662966100360153, 0.8674999999999999}}]}, {
         
          Hue[0.266747752497686, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.544352780525348, 0.86}, {0.057310036876143534`, 0.86}, {
           0.057310036876143534`, 0.86}}]}, {
          Hue[0.5028157299974758, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.5382308616280542`, 0.8524999999999999}, {
           0.02941976778888177, 0.8524999999999999}, {0.02941976778888177, 
           0.8524999999999999}}]}, {
          Hue[0.7388837074972656, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.0302489141900253`, 0.845}, {-1.9169634563883176`, 
           0.845}, {-1.9169634563883176`, 0.845}}]}, {
          Hue[0.9749516849970554, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.061430205220222, 
           0.8374999999999999}, {-1.8260195531697319`, 
           0.8374999999999999}, {-1.8260195531697319`, 
           0.8374999999999999}}]}, {
          Hue[0.21101966249684523`, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.272777247235948, 0.83}, {-1.070904662397098, 
           0.83}, {-1.070904662397098, 0.83}}]}, {
          Hue[0.44708763999663503`, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.5731165770751083`, 0.8225}, {0.1930374302742932, 0.8225}, {
           0.1930374302742932, 0.8225}}]}, {
          Hue[0.6831556174964248, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.1289595706294815`, 0.815}, {-1.6083870556577062`, 
           0.815}, {-1.6083870556577062`, 0.815}}]}, {
          Hue[0.9192235949962146, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.5076628529760723`, 0.8075}, {-0.12440794743378597`, 
           0.8075}, {-0.12440794743378597`, 0.8075}}]}, {
          Hue[0.15529157249600445`, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          Line[{{2.283398490009366, 
           0.7999999999999999}, {-1.0370469927050427`, 
           0.7999999999999999}, {-1.0370469927050427`, 
           0.7999999999999999}}]}}}, {{}, {}}}, {{}, {{{
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.756389061160777, 1.09760113}, {-5.756389061160777, 
           1.09760113}}]}, {
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.806263308699432, 1.13251156}, {-5.806263308699432, 
           1.13251156}}]}, {
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.9826204371182, 1.09609293}, {-5.9826204371182, 
           1.09609293}}]}, {
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.898918656975829, 1.16196488}, {-5.898918656975829, 
           1.16196488}}]}, {
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.972117118892186, 1.07427223}, {-5.972117118892186, 
           1.07427223}}]}, {
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.741734486875343, 1.12765957}, {-5.741734486875343, 
           1.12765957}}]}, {
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.793634291489022, 1.078125}, {-5.793634291489022, 
           1.078125}}]}, {
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.807686091563362, 1.07287449}, {-5.807686091563362, 
           1.07287449}}]}, {
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.768333062286134, 1.09119497}, {-5.768333062286134, 
           1.09119497}}]}, {
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.68161926108807, 1.10806595}, {-5.68161926108807, 
           1.10806595}}]}, {
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.940774673191039, 1.06624331}, {-5.940774673191039, 
           1.06624331}}]}, {
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.761204443021616, 1.1672326}, {-5.761204443021616, 
           1.1672326}}]}, {
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.781156018784461, 1.16510388}, {-5.781156018784461, 
           1.16510388}}]}, {
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.990925623454681, 1.05504587}, {-5.990925623454681, 
           1.05504587}}]}, {
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.753593889879423, 1.05905512}, {-5.753593889879423, 
           1.05905512}}]}, {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.908471944684373, 1.09398496}, {-5.908471944684373, 
           1.09398496}}]}, {
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.9228812678413645`, 1.17759197}, {-5.9228812678413645`, 
           1.17759197}}]}, {
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.770524968617844, 1.06864942}, {-5.770524968617844, 
           1.06864942}}]}, {
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.662373194785421, 1.15485733}, {-5.662373194785421, 
           1.15485733}}]}, {
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6], PointSize -> 0.01], 
          
          Point[{{-5.847597953160633, 1.09616246}, {-5.847597953160633, 
           1.09616246}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          Line[{{-5.756389061160777, 1.09760113}, {-1.0146772964222097`, 
           1.09760113}, {-1.0146772964222097`, 
           0.9425}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          
          Line[{{-5.756389061160777, 1.09760113}, {2.2902936483990315`, 
           1.09760113}, {2.2902936483990315`, 0.9425}}]}}}, {{}, {}}}}, {
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, 
      AxesLabel -> {"Bulkhead modulus"/"Cortex modulus", "Expansion Ratio"}, 
      AxesOrigin -> {-4.605170185988091, 1.}, AxesStyle -> 
      AbsoluteThickness[1.02], DisplayFunction :> Identity, Epilog -> {
        Inset[
         Rotate[
          Text["Experimental Data"], 90 Degree], {-6.5, 1.12}], 
        Text[
         Style[
         "Moduli consistent\nwith data points", TextAlignment -> Left], {3.7, 
         0.87}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {550, 300}, 
      LabelStyle -> {FontSize -> 12, FontColor -> GrayLevel[0]}, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Exp[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Exp[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-6.907755278982137, 4.605170185988092}, {0.79, 
       1.331259186608892}}, PlotRangePadding -> {{0, 
         Scaled[0.02]}, {0, 
         Scaled[0.05]}}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       LineLegend[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{0, Small, Small, Small}]]}, {"Min Ablation"}, 
        LegendMarkers -> None, LabelStyle -> (FontSize -> 10), LegendLayout -> 
        "Column"]]], 
     Scaled[{1.01, 0.85}], Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.865665659934348*^9, 3.8656656961523247`*^9, {3.865665754546997*^9, 
   3.865665813670844*^9}, 3.865666040265298*^9, {3.8659180975577097`*^9, 
   3.865918123634975*^9}, 3.865918159507441*^9, 3.866271391292861*^9, 
   3.86627157839428*^9, 3.866271706036439*^9},
 CellLabel->"Out[111]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
WyeJcNAuQml766T8RiQ/Z2dWWjuwroyQ22aPoJWbnbSxzKr/7hHskuT0CCeP
8g8+eWH5Oze8ky5iA1jlUxRRPcNXYsJqF3tpR086R2pzOnm5eacTLrwdgR1O
Jrgm2DoJdJByDBtIvqB4C/blIiBt0xZjqQJRkVS12dcnBUEOuSBr2lCKA2r6
NNmtlbKbOMytZIbc9kxSgMCmEVkUkLPJh/K+/rlz+YzfOsWJHkDsjLzmIWRd
2EsybP0HFw6bFHxcCto6erFUBUOn1/bn1yEK4x+T1B7v5CJKtMglX6lc1ki5
LJJNRXLZkJLLS6RcgIglXS6bSS4jkstOig5rjZv3atg5LlqEc2BPkNNIiJR5
mhIdfgPd9myF6CJDcm7UJu2n2O5EKfF3aREfoogY+j6qA7WdlyDsgZXxGtZl
sTKmSpdSwl6fEvZaxzIbRofGERLtD/seTc5kvJUpPvC+K4dWTi4rBKmJGY9S
1ENrJA9MGZ/fAWR1gxYPhQ1w61PF1qZeTFIvhqkXo/BiJF5YlCzZA088/9DZ
YgrawswvMJjU4BkuPPadAmD6Iqk5hj0UvRb6PyIgkfyg4w5NypJ9moAnsPnG
oV5EymQK5Bb9P3yl+r8kXdy6mbUemVc/w3DQBUrgLowAMJ343gO3bquMsJ/O
Sh/EHTVkB8lWG97uG1jX6sY2O9HwYCFp/2JPGAs98w2780HeUWACFzN7F3T0
0mtvRbOoPvD+q6jMtCdOoznnGyj5wBiGszQVDw66ID2923KQoUVgq/CjtAEc
QQYAQx+tZa9ZbUevtcaX529/u1V6cPdLbqrAPtuxKjj/Dd3q79+WXtd9TLK+
PyewJrLmkSBe6Pvu9t+x1HcY5k7IVSzSkEnzXc6RUPccusNj32y868qn0qCI
dbNzVDYom/SKi6kXWeqFil8yc2aVm3pAtXLDQD9J6HjmF0PlxYaAJza9eHpq
pxsGDj4krYpHkSqaIQ3ZyRcbGJCjK/Zu2CpmrWmnv/lKq5pBLbUOyQ6km6CH
O1fkiynL4br5jHxytPYPjC34WtCaU73lP+Vxu8YTsHY+XvMNcaMoBs7AQc0x
av2f+hkHLZFqQHUhOuCi5xmnkbrXU7KATVLW4IcO0DkEFO6bFu0xipdJCzSz
ArWys1K016Lianb2mNTy5J4GHE1NWn3nzeyRugjdmFrpmwzImxwJ/1rh1YJk
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
6tINYRvXpa4at7StmzeZJpIa35xaZ1gW4YIrcxHyWDXtX3eu1yC/5vqVK1rg
FU5kdpl2X83CfcFdHT2oHA9YVmZhROYfC6YIh4kgrn6Hqd5+HVw1XvYOafTb
yzHPGPEJMsGjxe4sSTZiTCehcjEb+3pIwZmJYm5Q+RN7stEFetVukMbGTGGj
C3PTaWy4UsW08nSG/EkGI+OUcI4IUvfVU+z3Kf6sGbYFbwbmqamyi5uqY5Zf
B5osH+HIo+YGYY0HS/2zJtmFR78rDYZm1p36COfLaZ/6gNoeQ/zRPnf6c8Gf
wjQDWcQvAmbV/PqgimOnijaNfnsp8DQeremZL8lL3K7b1Zx4AJ2qty8S2Oz9
aNHFptt8OLFba4X84eFqC6w07H3Z7aLRjXMYgYXrW97hHsUGW/EUTqXl0Sy6
U0UdW2nLk+WJvbQAW5Kz+0nOwtO/ufcwkwmm/FBfUUTpBj05Sb/flN9pon3V
Co/zb/Y0pMVe52iEzMJZXa4QXzHiezQPeMyzYa5+ByUtyRR/GlhnO+qZ0qkU
fZlyrRNeYaTPvTQU1wYUpEDOqbgq2VmBpZH+RjR/uFWmq+fymyle4aK8LgOa
UYFSozLi1dt9PsN0Bw5Z0ebrdkxxMKjXWPBDOCxt65BrjK1v0uZzoYBXub6m
1VeLOjnzbyFfq7atJW5FluaabVwxhaxA8qP9NvhaO3Sy4rzvMib8OEiXgjyq
Jxv+1SPUmNLCprgRrwscWCM4ILr6yAHv0YXv0k6JBni4Jbyr38hUoXVSVuOB
tsrh5yFf6ziIfb+EVtZGLHF2voz9KUmm+N3ZnfaBvUjPkKRi4Nd1umaq/QqD
zsEhrlFqDGgCU5xut255CHtLtIODAQpu7OxpIZ3a0ZcRP1EI1ALXQyVfsvOy
scGShulEu0Ds3zRzcGMcNx2t34uNeZeWUE+z41TDf0oyZyTGvvUPmJAML+ws
GFIYbXcFeFN8pXjTsGyaW05nuKSvwuBR5V0Kg98JNWw1D5xK4XojI3Fqkvcl
6dVXTrJ99ynYSjvYggdaKXYk2NJXVfAjA12qcrEULV6nKsUzGT1pZ5A7WF47
9cEgQ66QDAlmg0uLu3wKDiu7lgExXmAvKv09m4sgrzK6dbu0xvHoCFmR5ISj
Bg+J+NJZD9I2CkFOPPmTm0aLu0gtuKHqcRlrQwc0un+b0V0Y9nu557IyAGgS
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
B36Scw0=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"87d511f6-fdb0-46a3-81ef-229b20bc3822"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<supps/dmincmax.pdf\>\"", ",", "dmincmaxplot"}], "]"}]], "Input",\

 CellChangeTimes->{{3.865666045891436*^9, 3.8656660548407907`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"ac3edbcb-38d3-4f28-ac82-ef18716991ac"],

Cell[BoxData["\<\"supps/dmincmax.pdf\"\>"], "Output",
 CellChangeTimes->{3.86566605677826*^9, 3.866271393940584*^9, 
  3.866271580430779*^9, 3.8662717063066463`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"1cac0485-f61e-4aa6-b9bf-e3c141b299b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 847},
WindowMargins->{{285, Automatic}, {Automatic, 540}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"27b31c27-5ea4-4c9a-a7f7-47ac75b7353f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 238, 4, 69, "Chapter",ExpressionUUID->"eaa98f9b-007e-4e48-bffb-632e87c9e0e6"],
Cell[CellGroupData[{
Cell[843, 30, 201, 4, 67, "Section",ExpressionUUID->"68e34b4a-1cea-4a52-b752-66fd085968d8"],
Cell[CellGroupData[{
Cell[1069, 38, 251, 4, 30, "Input",ExpressionUUID->"1561e180-a455-4619-b708-64db3618280d"],
Cell[1323, 44, 526, 7, 34, "Output",ExpressionUUID->"90a220f4-948d-4e54-9fe2-1bf2cdd0b17f"]
}, Open  ]],
Cell[1864, 54, 558, 11, 30, "Input",ExpressionUUID->"a1fae4fd-fc0d-4c35-b0b2-98045e4ca38c"],
Cell[2425, 67, 370, 8, 30, "Input",ExpressionUUID->"edf121bb-bbe9-4344-a01b-bd02e5eb1950"],
Cell[CellGroupData[{
Cell[2820, 79, 1416, 40, 52, "Input",ExpressionUUID->"375081ef-cfa1-475c-bb1f-5223db1ca948"],
Cell[4239, 121, 77585, 1504, 627, "Output",ExpressionUUID->"2b2618bf-82ab-4756-ab76-fb00dda63161"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81861, 1630, 1255, 37, 73, "Input",ExpressionUUID->"f49c11e6-dd6a-4661-9744-7ade13d3f9cb"],
Cell[83119, 1669, 77365, 1502, 627, "Output",ExpressionUUID->"f89e1ff0-2a7f-436d-b6b4-944fa930cb0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160521, 3176, 986, 20, 73, "Input",ExpressionUUID->"2812a104-e95f-46ed-9b2f-d865d7f89c60"],
Cell[161510, 3198, 81443, 1576, 627, "Output",ExpressionUUID->"f24e1a5b-4145-4058-ac0e-26fae1afbb51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242990, 4779, 487, 9, 30, "Input",ExpressionUUID->"bad23199-8d7c-4b13-aa51-37b8ecafbb17"],
Cell[243480, 4790, 641, 11, 34, "Output",ExpressionUUID->"ce343599-8d10-41d4-8c91-ac6eb4872de5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244170, 4807, 174, 3, 67, "Section",ExpressionUUID->"9ed08d2c-df1d-4fc0-b545-e5011c0620b9"],
Cell[244347, 4812, 5659, 145, 409, "Input",ExpressionUUID->"6b6dafb0-efe9-489f-b25c-f25567cf2c32"],
Cell[CellGroupData[{
Cell[250031, 4961, 731, 11, 30, "Input",ExpressionUUID->"c6f9276f-f08d-4db8-9d28-35556797919e"],
Cell[250765, 4974, 40734, 786, 185, "Output",ExpressionUUID->"8a928efa-5656-44f9-8927-c10405f39c63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291536, 5765, 456, 9, 30, "Input",ExpressionUUID->"d766bd9e-f910-4818-b542-5c2bb6005d26"],
Cell[291995, 5776, 28131, 540, 232, "Output",ExpressionUUID->"7533177a-6496-468a-8b41-fe9df9dc5700"]
}, Open  ]],
Cell[320141, 6319, 383, 10, 30, "Input",ExpressionUUID->"d6be5c73-15ad-4b0f-921c-853e2494b398"],
Cell[CellGroupData[{
Cell[320549, 6333, 616, 16, 30, "Input",ExpressionUUID->"cd1f0746-89c1-453e-9eaa-fda5008fd8cd"],
Cell[321168, 6351, 453, 9, 34, "Output",ExpressionUUID->"878eb3d8-c304-4b77-9bb1-58a69cd3c3ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321658, 6365, 253, 6, 30, "Input",ExpressionUUID->"505ea0a3-aaca-44d8-b800-ebf707fb8247"],
Cell[321914, 6373, 292, 6, 34, "Output",ExpressionUUID->"f4af1f9b-b696-46a1-b4c9-4d790150a08a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322243, 6384, 513, 13, 30, "Input",ExpressionUUID->"64a4740d-43fb-49a2-b80e-d1081c03d3b2"],
Cell[322759, 6399, 453, 9, 34, "Output",ExpressionUUID->"3e3e51ae-cd66-42ea-9592-0f75f36b4084"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323249, 6413, 1201, 33, 94, "Input",ExpressionUUID->"f56dc3a0-bb99-4d34-af6d-3d92b9b9de3f"],
Cell[324453, 6448, 4198, 87, 253, "Output",ExpressionUUID->"e1cc0a66-10eb-4a15-8e47-c0f8c734128d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328688, 6540, 258, 5, 30, "Input",ExpressionUUID->"8fde9ddc-67ec-471e-893a-f5c408dd6e86"],
Cell[328949, 6547, 406, 10, 34, "Output",ExpressionUUID->"b072717f-6813-406c-aaa7-f98d34792569"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329392, 6562, 364, 10, 30, "Input",ExpressionUUID->"73ab3091-a569-48be-a206-7792e58359cc"],
Cell[329759, 6574, 641, 18, 55, "Output",ExpressionUUID->"23676ee3-ccc1-4090-8e43-2944c5ed889c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330437, 6597, 490, 12, 30, "Input",ExpressionUUID->"2946b88c-fada-47a6-90a4-43b3fc6284c8"],
Cell[330930, 6611, 343, 5, 34, "Output",ExpressionUUID->"85fc5080-09d7-4690-8c94-643c1412d5e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331310, 6621, 561, 14, 30, "Input",ExpressionUUID->"35c5b45b-ccd7-4b87-9d0a-826215a7ac19"],
Cell[331874, 6637, 5211, 105, 240, "Output",ExpressionUUID->"df4d1f63-32c4-4ef2-8f9b-3b746b999e3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337122, 6747, 8803, 220, 724, "Input",ExpressionUUID->"bb7c4fae-3c6a-4892-ad6b-f39df62e9682"],
Cell[345928, 6969, 257495, 4601, 317, 220437, 3992, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"87d511f6-fdb0-46a3-81ef-229b20bc3822"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603460, 11575, 271, 6, 30, "Input",ExpressionUUID->"ac3edbcb-38d3-4f28-ac82-ef18716991ac"],
Cell[603734, 11583, 248, 4, 34, "Output",ExpressionUUID->"1cac0485-f61e-4aa6-b9bf-e3c141b299b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

